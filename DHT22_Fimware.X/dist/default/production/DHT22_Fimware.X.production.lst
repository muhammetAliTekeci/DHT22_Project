

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 21:14:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181                           
   182                           	psect	idataCOMMON
   183  0427                     __pidataCOMMON:	
   184                           
   185                           ;initializer for _s
   186  0427  34A0               	retlw	low (_PrintBuffer| 0)
   187                           
   188                           	psect	idataBANK0
   189  03E1                     __pidataBANK0:	
   190                           
   191                           ;initializer for _Dht22CurrentStatus
   192  03E1  3401               	retlw	1
   193                           
   194                           ;initializer for _Rhmessage
   195  03E2  344E               	retlw	78
   196  03E3  3465               	retlw	101
   197  03E4  346D               	retlw	109
   198  03E5  343A               	retlw	58
   199  03E6  3420               	retlw	32
   200  03E7  3420               	retlw	32
   201  03E8  3420               	retlw	32
   202  03E9  3420               	retlw	32
   203  03EA  3420               	retlw	32
   204  03EB  3425               	retlw	37
   205  03EC  3420               	retlw	32
   206  03ED  3430               	retlw	48
   207  03EE  3430               	retlw	48
   208  03EF  342E               	retlw	46
   209  03F0  3430               	retlw	48
   210  03F1  3420               	retlw	32
   211  03F2  340D               	retlw	13
   212  03F3  3400               	retlw	0
   213  03F4  3400               	retlw	0
   214  03F5  3400               	retlw	0
   215                           
   216                           	psect	idataBANK1
   217  03C8                     __pidataBANK1:	
   218                           
   219                           ;initializer for _Tmessage
   220  03C8  3453               	retlw	83
   221  03C9  3469               	retlw	105
   222  03CA  3463               	retlw	99
   223  03CB  3461               	retlw	97
   224  03CC  346B               	retlw	107
   225  03CD  346C               	retlw	108
   226  03CE  3469               	retlw	105
   227  03CF  346B               	retlw	107
   228  03D0  343A               	retlw	58
   229  03D1  3420               	retlw	32
   230  03D2  3430               	retlw	48
   231  03D3  3430               	retlw	48
   232  03D4  342E               	retlw	46
   233  03D5  3430               	retlw	48
   234  03D6  3420               	retlw	32
   235  03D7  346F               	retlw	111
   236  03D8  3443               	retlw	67
   237  03D9  3420               	retlw	32
   238  03DA  340D               	retlw	13
   239  03DB  3400               	retlw	0
   240  03DC  3400               	retlw	0
   241  03DD  3400               	retlw	0
   242  03DE  3400               	retlw	0
   243  03DF  3400               	retlw	0
   244  03E0  3400               	retlw	0
   245  000E                     _TMR1	set	14
   246  0019                     _TXREG	set	25
   247  000E                     _TMR1L	set	14
   248  000F                     _TMR1H	set	15
   249  0010                     _T1CONbits	set	16
   250  0001                     _TMR0	set	1
   251  000C                     _PIR1bits	set	12
   252  0018                     _RCSTAbits	set	24
   253  0007                     _PORTCbits	set	7
   254  0006                     _PORTBbits	set	6
   255  000B                     _INTCONbits	set	11
   256  008C                     _PIE1bits	set	140
   257  0099                     _SPBRG	set	153
   258  0098                     _TXSTAbits	set	152
   259  0081                     _OPTION_REGbits	set	129
   260  0087                     _TRISCbits	set	135
   261  0086                     _TRISBbits	set	134
   262                           
   263                           	psect	strings
   264  02C3                     __pstrings:	
   265  02C3                     stringtab:	
   266  02C3                     __stringtab:	
   267                           
   268                           ;	String table - string pointers are 1 byte each
   269  02C3  1BFF               	btfsc	btemp+1,7
   270  02C4  2ACD               	ljmp	stringcode
   271  02C5  1383               	bcf	3,7
   272  02C6  187F               	btfsc	btemp+1,0
   273  02C7  1783               	bsf	3,7
   274  02C8  0800               	movf	0,w
   275  02C9  0A84               	incf	4,f
   276  02CA  1903               	skipnz
   277  02CB  0AFF               	incf	btemp+1,f
   278  02CC  0008               	return
   279  02CD                     stringcode:	
   280  02CD                     stringdir:	
   281  02CD  3002               	movlw	high stringdir
   282  02CE  008A               	movwf	10
   283  02CF  0804               	movf	4,w
   284  02D0  0A84               	incf	4,f
   285  02D1  0782               	addwf	2,f
   286  02D2                     __stringbase:	
   287  02D2  3400               	retlw	0
   288  02D3                     __end_of__stringtab:	
   289  02D3                     STR_3:	
   290  02D3  3420               	retlw	32	;' '
   291  02D4  3443               	retlw	67	;'C'
   292  02D5  3468               	retlw	104	;'h'
   293  02D6  3465               	retlw	101	;'e'
   294  02D7  3463               	retlw	99	;'c'
   295  02D8  346B               	retlw	107	;'k'
   296  02D9  3453               	retlw	83	;'S'
   297  02DA  3475               	retlw	117	;'u'
   298  02DB  346D               	retlw	109	;'m'
   299  02DC  3420               	retlw	32	;' '
   300  02DD  3445               	retlw	69	;'E'
   301  02DE  3472               	retlw	114	;'r'
   302  02DF  3472               	retlw	114	;'r'
   303  02E0  346F               	retlw	111	;'o'
   304  02E1  3472               	retlw	114	;'r'
   305  02E2  3421               	retlw	33	;'!'
   306  02E3  3420               	retlw	32	;' '
   307  02E4  340D               	retlw	13
   308  02E5  3400               	retlw	0
   309  02E6                     STR_1:	
   310  02E6  3454               	retlw	84	;'T'
   311  02E7  3465               	retlw	101	;'e'
   312  02E8  3473               	retlw	115	;'s'
   313  02E9  3474               	retlw	116	;'t'
   314  02EA  3420               	retlw	32	;' '
   315  02EB  3446               	retlw	70	;'F'
   316  02EC  3461               	retlw	97	;'a'
   317  02ED  3469               	retlw	105	;'i'
   318  02EE  346C               	retlw	108	;'l'
   319  02EF  3421               	retlw	33	;'!'
   320  02F0  340D               	retlw	13
   321  02F1  3420               	retlw	32	;' '
   322  02F2  3400               	retlw	0
   323  02F3                     STR_2:	
   324  02F3  3454               	retlw	84	;'T'
   325  02F4  3469               	retlw	105	;'i'
   326  02F5  346D               	retlw	109	;'m'
   327  02F6  3465               	retlw	101	;'e'
   328  02F7  3420               	retlw	32	;' '
   329  02F8  346F               	retlw	111	;'o'
   330  02F9  3475               	retlw	117	;'u'
   331  02FA  3474               	retlw	116	;'t'
   332  02FB  3421               	retlw	33	;'!'
   333  02FC  340D               	retlw	13
   334  02FD  3420               	retlw	32	;' '
   335  02FE  3400               	retlw	0
   336                           
   337                           ; #config settings
   338  0000                     
   339                           	psect	cinit
   340  000F                     start_initialization:	
   341  000F                     __initialization:	
   342                           
   343                           ; Initialize objects allocated to BANK1
   344  000F  1383               	bcf	3,7	;select IRP bank0
   345  0010  30E1               	movlw	low (__pdataBANK1+25)
   346  0011  00FD               	movwf	btemp+-1
   347  0012  3003               	movlw	high __pidataBANK1
   348  0013  00FE               	movwf	btemp
   349  0014  30C8               	movlw	low __pidataBANK1
   350  0015  00FF               	movwf	btemp+1
   351  0016  30C8               	movlw	low __pdataBANK1
   352  0017  0084               	movwf	4
   353  0018  120A  118A  240F  120A  118A  	fcall	init_ram0
   354                           
   355                           ; Initialize objects allocated to BANK0
   356  001D  3064               	movlw	low (__pdataBANK0+21)
   357  001E  00FD               	movwf	btemp+-1
   358  001F  3003               	movlw	high __pidataBANK0
   359  0020  00FE               	movwf	btemp
   360  0021  30E1               	movlw	low __pidataBANK0
   361  0022  00FF               	movwf	btemp+1
   362  0023  304F               	movlw	low __pdataBANK0
   363  0024  0084               	movwf	4
   364  0025  120A  118A  240F  120A  118A  	fcall	init_ram0
   365                           
   366                           ; Initialize objects allocated to COMMON
   367  002A  120A  118A  2427  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   368  002F  00FA               	movwf	__pdataCOMMON& (0+127)
   369                           
   370                           ; Clear objects allocated to BANK3
   371  0030  1783               	bsf	3,7	;select IRP bank2
   372  0031  3090               	movlw	low __pbssBANK3
   373  0032  0084               	movwf	4
   374  0033  30B8               	movlw	low (__pbssBANK3+40)
   375  0034  120A  118A  241C  120A  118A  	fcall	clear_ram0
   376                           
   377                           ; Clear objects allocated to BANK1
   378  0039  1383               	bcf	3,7	;select IRP bank0
   379  003A  30A0               	movlw	low __pbssBANK1
   380  003B  0084               	movwf	4
   381  003C  30C8               	movlw	low (__pbssBANK1+40)
   382  003D  120A  118A  241C  120A  118A  	fcall	clear_ram0
   383                           
   384                           ; Clear objects allocated to BANK0
   385  0042  3020               	movlw	low __pbssBANK0
   386  0043  0084               	movwf	4
   387  0044  304F               	movlw	low (__pbssBANK0+47)
   388  0045  120A  118A  241C   	fcall	clear_ram0
   389                           
   390                           ; Clear objects allocated to COMMON
   391  0048  01F9               	clrf	__pbssCOMMON& (0+127)
   392  0049                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  0049                     __end_of__initialization:	
   396  0049  0183               	clrf	3
   397  004A  120A  118A  29EF   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMMON
   400  0079                     __pbssCOMMON:	
   401  0079                     T0int@Cnt:	
   402  0079                     	ds	1
   403                           
   404                           	psect	dataCOMMON
   405  007A                     __pdataCOMMON:	
   406  007A                     _s:	
   407  007A                     	ds	1
   408                           
   409                           	psect	bssBANK0
   410  0020                     __pbssBANK0:	
   411  0020                     _Counter:	
   412  0020                     	ds	4
   413  0024                     _ReceiveIndex:	
   414  0024                     	ds	2
   415  0026                     _Index:	
   416  0026                     	ds	2
   417  0028                     _TRealValue:	
   418  0028                     	ds	2
   419  002A                     _RhRealValue:	
   420  002A                     	ds	2
   421  002C                     _TsignedDecimalValue:	
   422  002C                     	ds	2
   423  002E                     _TunsignedDecimalValue:	
   424  002E                     	ds	2
   425  0030                     _TFractionVal:	
   426  0030                     	ds	2
   427  0032                     _RhFractionVal:	
   428  0032                     	ds	2
   429  0034                     _RhDecimalValue:	
   430  0034                     	ds	2
   431  0036                     _CheckSum:	
   432  0036                     	ds	2
   433  0038                     _Timeout:	
   434  0038                     	ds	2
   435  003A                     _PreviousShiftBuffer:	
   436  003A                     	ds	2
   437  003C                     _CurrentShiftBuffer:	
   438  003C                     	ds	2
   439  003E                     _CurrentPinValue:	
   440  003E                     	ds	2
   441  0040                     _PreviousPinValue:	
   442  0040                     	ds	2
   443  0042                     _shiftRegIndex:	
   444  0042                     	ds	1
   445  0043                     _SystemFlag:	
   446  0043                     	ds	1
   447  0044                     _OneSecond:	
   448  0044                     	ds	1
   449  0045                     _TempArray:	
   450  0045                     	ds	10
   451                           
   452                           	psect	dataBANK0
   453  004F                     __pdataBANK0:	
   454  004F                     _Dht22CurrentStatus:	
   455  004F                     	ds	1
   456  0050                     _Rhmessage:	
   457  0050                     	ds	20
   458                           
   459                           	psect	bssBANK1
   460  00A0                     __pbssBANK1:	
   461  00A0                     _PrintBuffer:	
   462  00A0                     	ds	40
   463                           
   464                           	psect	dataBANK1
   465  00C8                     __pdataBANK1:	
   466  00C8                     _Tmessage:	
   467  00C8                     	ds	25
   468                           
   469                           	psect	bssBANK3
   470  0190                     __pbssBANK3:	
   471  0190                     _TestArray:	
   472  0190                     	ds	40
   473                           
   474                           	psect	inittext
   475  040B                     init_fetch0:	
   476                           ;	Called with low address in FSR and high address in W
   477                           
   478  040B  087E               	movf	126,w
   479  040C  008A               	movwf	10
   480  040D  087F               	movf	127,w
   481  040E  0082               	movwf	2
   482  040F                     init_ram0:	
   483                           ;Called with:
   484                           ;	high address of idata address in btemp 
   485                           ;	low address of idata address in btemp+1 
   486                           ;	low address of data in FSR
   487                           ;	high address + 1 of data in btemp-1
   488                           
   489  040F  240B  120A  118A   	fcall	init_fetch0
   490  0412  0080               	movwf	0
   491  0413  0A84               	incf	4,f
   492  0414  0804               	movf	4,w
   493  0415  067D               	xorwf	125,w
   494  0416  1903               	btfsc	3,2
   495  0417  3400               	retlw	0
   496  0418  0AFF               	incf	127,f
   497  0419  1903               	btfsc	3,2
   498  041A  0AFE               	incf	126,f
   499  041B  2C0F               	goto	init_ram0
   500                           
   501                           	psect	clrtext
   502  041C                     clear_ram0:	
   503                           ;	Called with FSR containing the base address, and
   504                           ;	W with the last address+1
   505                           
   506  041C  0064               	clrwdt	;clear the watchdog before getting into this loop
   507  041D                     clrloop0:	
   508  041D  0180               	clrf	0	;clear RAM location pointed to by FSR
   509  041E  0A84               	incf	4,f	;increment pointer
   510  041F  0604               	xorwf	4,w	;XOR with final address
   511  0420  1903               	btfsc	3,2	;have we reached the end yet?
   512  0421  3400               	retlw	0	;all done for this memory range, return
   513  0422  0604               	xorwf	4,w	;XOR again to restore value
   514  0423  2C1D               	goto	clrloop0	;do the next byte
   515                           
   516                           	psect	cstackCOMMON
   517  0070                     __pcstackCOMMON:	
   518  0070                     ?_SetupConfHandle:	
   519  0070                     ?_InitialVariableHande:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_OparateSystem:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_T0int:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_T0int:	
   532                           ; 1 bytes @ 0x0
   533                           
   534                           
   535                           ; 1 bytes @ 0x0
   536  0070                     	ds	3
   537  0073                     ??_SetupConfHandle:	
   538  0073                     ??_InitialVariableHande:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     ?_SerialPrint:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     ?___lwdiv:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  0073                     SerialPrint@Text:	
   548                           ; 2 bytes @ 0x3
   549                           
   550  0073                     ___lwdiv@divisor:	
   551                           ; 2 bytes @ 0x3
   552                           
   553                           
   554                           ; 2 bytes @ 0x3
   555  0073                     	ds	2
   556  0075                     ??_OparateSystem:	
   557  0075                     ??_SerialPrint:	
   558                           ; 1 bytes @ 0x5
   559                           
   560  0075                     ___lwdiv@dividend:	
   561                           ; 1 bytes @ 0x5
   562                           
   563                           
   564                           ; 2 bytes @ 0x5
   565  0075                     	ds	2
   566  0077                     ??___lwdiv:	
   567                           
   568                           ; 1 bytes @ 0x7
   569  0077                     	ds	1
   570  0078                     ??___lwmod:	
   571                           
   572                           ; 1 bytes @ 0x8
   573  0078                     	ds	1
   574                           
   575                           	psect	cstackBANK0
   576  0064                     __pcstackBANK0:	
   577  0064                     OparateSystem@DataPtr:	
   578  0064                     ___lwdiv@counter:	
   579                           ; 1 bytes @ 0x0
   580                           
   581                           
   582                           ; 1 bytes @ 0x0
   583  0064                     	ds	1
   584  0065                     OparateSystem@Idx:	
   585  0065                     ___lwdiv@quotient:	
   586                           ; 2 bytes @ 0x1
   587                           
   588                           
   589                           ; 2 bytes @ 0x1
   590  0065                     	ds	2
   591  0067                     ?___lwmod:	
   592  0067                     ___lwmod@divisor:	
   593                           ; 2 bytes @ 0x3
   594                           
   595                           
   596                           ; 2 bytes @ 0x3
   597  0067                     	ds	2
   598  0069                     ___lwmod@dividend:	
   599                           
   600                           ; 2 bytes @ 0x5
   601  0069                     	ds	2
   602  006B                     ___lwmod@counter:	
   603                           
   604                           ; 1 bytes @ 0x7
   605  006B                     	ds	1
   606  006C                     ??_main:	
   607                           
   608                           ; 1 bytes @ 0x8
   609  006C                     	ds	1
   610                           
   611                           	psect	maintext
   612  01EF                     __pmaintext:	
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 71 in file "Source_Files/main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : B00/0
   629 ;;		On exit  : 300/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       1       0       0       0
   635 ;;      Totals:         0       1       0       0       0
   636 ;;Total ram usage:        1 bytes
   637 ;; Hardware stack levels required when called:    4
   638 ;; This function calls:
   639 ;;		_InitialVariableHande
   640 ;;		_OparateSystem
   641 ;;		_SerialPrint
   642 ;;		_SetupConfHandle
   643 ;;		___lwdiv
   644 ;;		___lwmod
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _main
   652  01EF                     _main:	
   653                           
   654                           ;main.c: 73: SetupConfHandle();
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   658  01EF  120A  118A  233B  120A  118A  	fcall	_SetupConfHandle
   659                           
   660                           ;main.c: 74: InitialVariableHande();
   661  01F4  120A  118A  2424  120A  118A  	fcall	_InitialVariableHande
   662  01F9                     l1355:	
   663                           
   664                           ;main.c: 77: {;main.c: 78: OparateSystem();
   665  01F9  120A  118A  204D  120A  118A  	fcall	_OparateSystem
   666                           
   667                           ;main.c: 79: if( SystemFlag.SendTxEnable == 1 )
   668  01FE  1C43               	btfss	_SystemFlag,0
   669  01FF  29F9               	goto	l1355
   670                           
   671                           ;main.c: 80: {;main.c: 81: Rhmessage[11] = (RhDecimalValue/100)%10 + 48;
   672  0200  300A               	movlw	10
   673  0201  00E7               	movwf	___lwmod@divisor
   674  0202  3000               	movlw	0
   675  0203  00E8               	movwf	___lwmod@divisor+1
   676  0204  3064               	movlw	100
   677  0205  00F3               	movwf	___lwdiv@divisor
   678  0206  3000               	movlw	0
   679  0207  00F4               	movwf	___lwdiv@divisor+1
   680  0208  0835               	movf	_RhDecimalValue+1,w
   681  0209  00F6               	movwf	___lwdiv@dividend+1
   682  020A  0834               	movf	_RhDecimalValue,w
   683  020B  00F5               	movwf	___lwdiv@dividend
   684  020C  120A  118A  22FF  120A  118A  	fcall	___lwdiv
   685  0211  0874               	movf	?___lwdiv+1,w
   686  0212  00EA               	movwf	___lwmod@dividend+1
   687  0213  0873               	movf	?___lwdiv,w
   688  0214  00E9               	movwf	___lwmod@dividend
   689  0215  120A  118A  2374  120A  118A  	fcall	___lwmod
   690  021A  0867               	movf	?___lwmod,w
   691  021B  3E30               	addlw	48
   692  021C  00EC               	movwf	??_main
   693  021D  086C               	movf	??_main,w
   694  021E  00DB               	movwf	_Rhmessage+11
   695                           
   696                           ;main.c: 82: Rhmessage[12] = (RhDecimalValue/10)%10 + 48;
   697  021F  300A               	movlw	10
   698  0220  00E7               	movwf	___lwmod@divisor
   699  0221  3000               	movlw	0
   700  0222  00E8               	movwf	___lwmod@divisor+1
   701  0223  300A               	movlw	10
   702  0224  00F3               	movwf	___lwdiv@divisor
   703  0225  3000               	movlw	0
   704  0226  00F4               	movwf	___lwdiv@divisor+1
   705  0227  0835               	movf	_RhDecimalValue+1,w
   706  0228  00F6               	movwf	___lwdiv@dividend+1
   707  0229  0834               	movf	_RhDecimalValue,w
   708  022A  00F5               	movwf	___lwdiv@dividend
   709  022B  120A  118A  22FF  120A  118A  	fcall	___lwdiv
   710  0230  0874               	movf	?___lwdiv+1,w
   711  0231  00EA               	movwf	___lwmod@dividend+1
   712  0232  0873               	movf	?___lwdiv,w
   713  0233  00E9               	movwf	___lwmod@dividend
   714  0234  120A  118A  2374  120A  118A  	fcall	___lwmod
   715  0239  0867               	movf	?___lwmod,w
   716  023A  3E30               	addlw	48
   717  023B  00EC               	movwf	??_main
   718  023C  086C               	movf	??_main,w
   719  023D  00DC               	movwf	_Rhmessage+12
   720                           
   721                           ;main.c: 83: Rhmessage[14] = (RhDecimalValue%10) + 48;
   722  023E  300A               	movlw	10
   723  023F  00E7               	movwf	___lwmod@divisor
   724  0240  3000               	movlw	0
   725  0241  00E8               	movwf	___lwmod@divisor+1
   726  0242  0835               	movf	_RhDecimalValue+1,w
   727  0243  00EA               	movwf	___lwmod@dividend+1
   728  0244  0834               	movf	_RhDecimalValue,w
   729  0245  00E9               	movwf	___lwmod@dividend
   730  0246  120A  118A  2374  120A  118A  	fcall	___lwmod
   731  024B  0867               	movf	?___lwmod,w
   732  024C  3E30               	addlw	48
   733  024D  00EC               	movwf	??_main
   734  024E  086C               	movf	??_main,w
   735  024F  00DE               	movwf	_Rhmessage+14
   736                           
   737                           ;main.c: 85: SerialPrint( Rhmessage );
   738  0250  3050               	movlw	(low (_Rhmessage| 0))& (0+255)
   739  0251  00F3               	movwf	SerialPrint@Text
   740  0252  3000               	movlw	0
   741  0253  00F4               	movwf	SerialPrint@Text+1
   742  0254  120A  118A  23A6  120A  118A  	fcall	_SerialPrint
   743                           
   744                           ;main.c: 87: if( TsignedDecimalValue < 0 )
   745  0259  1FAD               	btfss	_TsignedDecimalValue+1,7
   746  025A  2A5D               	goto	l1367
   747                           
   748                           ;main.c: 88: Tmessage[9] ='-';
   749  025B  302D               	movlw	45
   750  025C  2A5E               	goto	L1
   751  025D                     l1367:	
   752                           
   753                           ;main.c: 89: else;main.c: 90: Tmessage[9] =' ';
   754  025D  3020               	movlw	32
   755  025E                     L1:	
   756  025E  00EC               	movwf	??_main
   757  025F  086C               	movf	??_main,w
   758  0260  1683               	bsf	3,5	;RP0=1, select bank1
   759  0261  00D1               	movwf	(_Tmessage^(0+128)+9)
   760                           
   761                           ;main.c: 91: Tmessage[10] = (TunsignedDecimalValue/100)%10 + 48;
   762  0262  300A               	movlw	10
   763  0263  1283               	bcf	3,5	;RP0=0, select bank0
   764  0264  00E7               	movwf	___lwmod@divisor
   765  0265  3000               	movlw	0
   766  0266  00E8               	movwf	___lwmod@divisor+1
   767  0267  3064               	movlw	100
   768  0268  00F3               	movwf	___lwdiv@divisor
   769  0269  3000               	movlw	0
   770  026A  00F4               	movwf	___lwdiv@divisor+1
   771  026B  082F               	movf	_TunsignedDecimalValue+1,w
   772  026C  00F6               	movwf	___lwdiv@dividend+1
   773  026D  082E               	movf	_TunsignedDecimalValue,w
   774  026E  00F5               	movwf	___lwdiv@dividend
   775  026F  120A  118A  22FF  120A  118A  	fcall	___lwdiv
   776  0274  0874               	movf	?___lwdiv+1,w
   777  0275  00EA               	movwf	___lwmod@dividend+1
   778  0276  0873               	movf	?___lwdiv,w
   779  0277  00E9               	movwf	___lwmod@dividend
   780  0278  120A  118A  2374  120A  118A  	fcall	___lwmod
   781  027D  0867               	movf	?___lwmod,w
   782  027E  3E30               	addlw	48
   783  027F  00EC               	movwf	??_main
   784  0280  086C               	movf	??_main,w
   785  0281  1683               	bsf	3,5	;RP0=1, select bank1
   786  0282  00D2               	movwf	(_Tmessage^(0+128)+10)
   787                           
   788                           ;main.c: 92: Tmessage[11] = (TunsignedDecimalValue/10)%10 + 48;
   789  0283  300A               	movlw	10
   790  0284  1283               	bcf	3,5	;RP0=0, select bank0
   791  0285  00E7               	movwf	___lwmod@divisor
   792  0286  3000               	movlw	0
   793  0287  00E8               	movwf	___lwmod@divisor+1
   794  0288  300A               	movlw	10
   795  0289  00F3               	movwf	___lwdiv@divisor
   796  028A  3000               	movlw	0
   797  028B  00F4               	movwf	___lwdiv@divisor+1
   798  028C  082F               	movf	_TunsignedDecimalValue+1,w
   799  028D  00F6               	movwf	___lwdiv@dividend+1
   800  028E  082E               	movf	_TunsignedDecimalValue,w
   801  028F  00F5               	movwf	___lwdiv@dividend
   802  0290  120A  118A  22FF  120A  118A  	fcall	___lwdiv
   803  0295  0874               	movf	?___lwdiv+1,w
   804  0296  00EA               	movwf	___lwmod@dividend+1
   805  0297  0873               	movf	?___lwdiv,w
   806  0298  00E9               	movwf	___lwmod@dividend
   807  0299  120A  118A  2374  120A  118A  	fcall	___lwmod
   808  029E  0867               	movf	?___lwmod,w
   809  029F  3E30               	addlw	48
   810  02A0  00EC               	movwf	??_main
   811  02A1  086C               	movf	??_main,w
   812  02A2  1683               	bsf	3,5	;RP0=1, select bank1
   813  02A3  00D3               	movwf	(_Tmessage^(0+128)+11)
   814                           
   815                           ;main.c: 93: Tmessage[13] = (TunsignedDecimalValue%10) + 48;
   816  02A4  300A               	movlw	10
   817  02A5  1283               	bcf	3,5	;RP0=0, select bank0
   818  02A6  00E7               	movwf	___lwmod@divisor
   819  02A7  3000               	movlw	0
   820  02A8  00E8               	movwf	___lwmod@divisor+1
   821  02A9  082F               	movf	_TunsignedDecimalValue+1,w
   822  02AA  00EA               	movwf	___lwmod@dividend+1
   823  02AB  082E               	movf	_TunsignedDecimalValue,w
   824  02AC  00E9               	movwf	___lwmod@dividend
   825  02AD  120A  118A  2374  120A  118A  	fcall	___lwmod
   826  02B2  0867               	movf	?___lwmod,w
   827  02B3  3E30               	addlw	48
   828  02B4  00EC               	movwf	??_main
   829  02B5  086C               	movf	??_main,w
   830  02B6  1683               	bsf	3,5	;RP0=1, select bank1
   831  02B7  00D5               	movwf	(_Tmessage^(0+128)+13)
   832                           
   833                           ;main.c: 95: SerialPrint( Tmessage );
   834  02B8  30C8               	movlw	(low (_Tmessage| 0))& (0+255)
   835  02B9  00F3               	movwf	SerialPrint@Text
   836  02BA  3000               	movlw	0
   837  02BB  00F4               	movwf	SerialPrint@Text+1
   838  02BC  120A  118A  23A6  120A  118A  	fcall	_SerialPrint
   839                           
   840                           ;main.c: 99: SystemFlag.SendTxEnable = 0;
   841  02C1  1043               	bcf	_SystemFlag,0
   842  02C2  29F9               	goto	l1355
   843  02C3                     __end_of_main:	
   844                           
   845                           	psect	text1
   846  0374                     __ptext1:	
   847 ;; *************** function ___lwmod *****************
   848 ;; Defined at:
   849 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  divisor         2    3[BANK0 ] unsigned int 
   852 ;;  dividend        2    5[BANK0 ] unsigned int 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  counter         1    7[BANK0 ] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2    3[BANK0 ] unsigned int 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 300/0
   861 ;;		On exit  : 300/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       4       0       0       0
   865 ;;      Locals:         0       1       0       0       0
   866 ;;      Temps:          1       0       0       0       0
   867 ;;      Totals:         1       5       0       0       0
   868 ;;Total ram usage:        6 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function ___lwmod
   880  0374                     ___lwmod:	
   881                           
   882                           ;incstack = 0
   883                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   884  0374  0867               	movf	___lwmod@divisor,w
   885  0375  0468               	iorwf	___lwmod@divisor+1,w
   886  0376  1903               	btfsc	3,2
   887  0377  2BA1               	goto	l1347
   888  0378  01EB               	clrf	___lwmod@counter
   889  0379  0AEB               	incf	___lwmod@counter,f
   890  037A                     l1337:	
   891  037A  1BE8               	btfsc	___lwmod@divisor+1,7
   892  037B  2B88               	goto	l1339
   893  037C  3001               	movlw	1
   894  037D                     u995:	
   895  037D  1003               	clrc
   896  037E  0DE7               	rlf	___lwmod@divisor,f
   897  037F  0DE8               	rlf	___lwmod@divisor+1,f
   898  0380  3EFF               	addlw	-1
   899  0381  1D03               	skipz
   900  0382  2B7D               	goto	u995
   901  0383  3001               	movlw	1
   902  0384  00F8               	movwf	??___lwmod
   903  0385  0878               	movf	??___lwmod,w
   904  0386  07EB               	addwf	___lwmod@counter,f
   905  0387  2B7A               	goto	l1337
   906  0388                     l1339:	
   907  0388  0868               	movf	___lwmod@divisor+1,w
   908  0389  026A               	subwf	___lwmod@dividend+1,w
   909  038A  1D03               	skipz
   910  038B  2B8E               	goto	u1015
   911  038C  0867               	movf	___lwmod@divisor,w
   912  038D  0269               	subwf	___lwmod@dividend,w
   913  038E                     u1015:	
   914  038E  1C03               	skipc
   915  038F  2B96               	goto	l1343
   916  0390  0867               	movf	___lwmod@divisor,w
   917  0391  02E9               	subwf	___lwmod@dividend,f
   918  0392  0868               	movf	___lwmod@divisor+1,w
   919  0393  1C03               	skipc
   920  0394  03EA               	decf	___lwmod@dividend+1,f
   921  0395  02EA               	subwf	___lwmod@dividend+1,f
   922  0396                     l1343:	
   923  0396  3001               	movlw	1
   924  0397                     u1025:	
   925  0397  1003               	clrc
   926  0398  0CE8               	rrf	___lwmod@divisor+1,f
   927  0399  0CE7               	rrf	___lwmod@divisor,f
   928  039A  3EFF               	addlw	-1
   929  039B  1D03               	skipz
   930  039C  2B97               	goto	u1025
   931  039D  3001               	movlw	1
   932  039E  02EB               	subwf	___lwmod@counter,f
   933  039F  1D03               	btfss	3,2
   934  03A0  2B88               	goto	l1339
   935  03A1                     l1347:	
   936  03A1  086A               	movf	___lwmod@dividend+1,w
   937  03A2  00E8               	movwf	?___lwmod+1
   938  03A3  0869               	movf	___lwmod@dividend,w
   939  03A4  00E7               	movwf	?___lwmod
   940  03A5  0008               	return
   941  03A6                     __end_of___lwmod:	
   942                           
   943                           	psect	text2
   944  02FF                     __ptext2:	
   945 ;; *************** function ___lwdiv *****************
   946 ;; Defined at:
   947 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  divisor         2    3[COMMON] unsigned int 
   950 ;;  dividend        2    5[COMMON] unsigned int 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  quotient        2    1[BANK0 ] unsigned int 
   953 ;;  counter         1    0[BANK0 ] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2    3[COMMON] unsigned int 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 300/0
   960 ;;		On exit  : 300/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         4       0       0       0       0
   964 ;;      Locals:         0       3       0       0       0
   965 ;;      Temps:          1       0       0       0       0
   966 ;;      Totals:         5       3       0       0       0
   967 ;;Total ram usage:        8 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function ___lwdiv
   979  02FF                     ___lwdiv:	
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   983  02FF  01E5               	clrf	___lwdiv@quotient
   984  0300  01E6               	clrf	___lwdiv@quotient+1
   985  0301  0873               	movf	___lwdiv@divisor,w
   986  0302  0474               	iorwf	___lwdiv@divisor+1,w
   987  0303  1903               	btfsc	3,2
   988  0304  2B36               	goto	l1325
   989  0305  01E4               	clrf	___lwdiv@counter
   990  0306  0AE4               	incf	___lwdiv@counter,f
   991  0307                     l1313:	
   992  0307  1BF4               	btfsc	___lwdiv@divisor+1,7
   993  0308  2B15               	goto	l1315
   994  0309  3001               	movlw	1
   995  030A                     u925:	
   996  030A  1003               	clrc
   997  030B  0DF3               	rlf	___lwdiv@divisor,f
   998  030C  0DF4               	rlf	___lwdiv@divisor+1,f
   999  030D  3EFF               	addlw	-1
  1000  030E  1D03               	skipz
  1001  030F  2B0A               	goto	u925
  1002  0310  3001               	movlw	1
  1003  0311  00F7               	movwf	??___lwdiv
  1004  0312  0877               	movf	??___lwdiv,w
  1005  0313  07E4               	addwf	___lwdiv@counter,f
  1006  0314  2B07               	goto	l1313
  1007  0315                     l1315:	
  1008  0315  3001               	movlw	1
  1009  0316                     u945:	
  1010  0316  1003               	clrc
  1011  0317  0DE5               	rlf	___lwdiv@quotient,f
  1012  0318  0DE6               	rlf	___lwdiv@quotient+1,f
  1013  0319  3EFF               	addlw	-1
  1014  031A  1D03               	skipz
  1015  031B  2B16               	goto	u945
  1016  031C  0874               	movf	___lwdiv@divisor+1,w
  1017  031D  0276               	subwf	___lwdiv@dividend+1,w
  1018  031E  1D03               	skipz
  1019  031F  2B22               	goto	u955
  1020  0320  0873               	movf	___lwdiv@divisor,w
  1021  0321  0275               	subwf	___lwdiv@dividend,w
  1022  0322                     u955:	
  1023  0322  1C03               	skipc
  1024  0323  2B2B               	goto	l1321
  1025  0324  0873               	movf	___lwdiv@divisor,w
  1026  0325  02F5               	subwf	___lwdiv@dividend,f
  1027  0326  0874               	movf	___lwdiv@divisor+1,w
  1028  0327  1C03               	skipc
  1029  0328  03F6               	decf	___lwdiv@dividend+1,f
  1030  0329  02F6               	subwf	___lwdiv@dividend+1,f
  1031  032A  1465               	bsf	___lwdiv@quotient,0
  1032  032B                     l1321:	
  1033  032B  3001               	movlw	1
  1034  032C                     u965:	
  1035  032C  1003               	clrc
  1036  032D  0CF4               	rrf	___lwdiv@divisor+1,f
  1037  032E  0CF3               	rrf	___lwdiv@divisor,f
  1038  032F  3EFF               	addlw	-1
  1039  0330  1D03               	skipz
  1040  0331  2B2C               	goto	u965
  1041  0332  3001               	movlw	1
  1042  0333  02E4               	subwf	___lwdiv@counter,f
  1043  0334  1D03               	btfss	3,2
  1044  0335  2B15               	goto	l1315
  1045  0336                     l1325:	
  1046  0336  0866               	movf	___lwdiv@quotient+1,w
  1047  0337  00F4               	movwf	?___lwdiv+1
  1048  0338  0865               	movf	___lwdiv@quotient,w
  1049  0339  00F3               	movwf	?___lwdiv
  1050  033A  0008               	return
  1051  033B                     __end_of___lwdiv:	
  1052                           
  1053                           	psect	text3
  1054  033B                     __ptext3:	
  1055 ;; *************** function _SetupConfHandle *****************
  1056 ;; Defined at:
  1057 ;;		line 105 in file "Source_Files/main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2
  1066 ;; Tracked objects:
  1067 ;;		On entry : B00/0
  1068 ;;		On exit  : B00/0
  1069 ;;		Unchanged: 800/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _SetupConfHandle
  1087  033B                     _SetupConfHandle:	
  1088                           
  1089                           ;main.c: 108: INTCONbits.GIE = 0;
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _SetupConfHandle: [wreg+status,2]
  1093  033B  138B               	bcf	11,7	;volatile
  1094                           
  1095                           ;main.c: 110: TRISBbits.TRISB0 = 0;
  1096  033C  1683               	bsf	3,5	;RP0=1, select bank1
  1097  033D  1006               	bcf	6,0	;volatile
  1098                           
  1099                           ;main.c: 111: TRISBbits.TRISB1 = 0;
  1100  033E  1086               	bcf	6,1	;volatile
  1101                           
  1102                           ;main.c: 112: TRISBbits.TRISB2 = 0;
  1103  033F  1106               	bcf	6,2	;volatile
  1104                           
  1105                           ;main.c: 113: TRISCbits.TRISC6 = 0;
  1106  0340  1307               	bcf	7,6	;volatile
  1107                           
  1108                           ;main.c: 114: TRISCbits.TRISC2 = 0;
  1109  0341  1107               	bcf	7,2	;volatile
  1110                           
  1111                           ;main.c: 116: PORTBbits.RB0 = 0;
  1112  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0343  1006               	bcf	6,0	;volatile
  1114                           
  1115                           ;main.c: 117: PORTBbits.RB1 = 0;
  1116  0344  1086               	bcf	6,1	;volatile
  1117                           
  1118                           ;main.c: 118: PORTBbits.RB2 = 0;
  1119  0345  1106               	bcf	6,2	;volatile
  1120                           
  1121                           ;main.c: 119: CurrentShiftBuffer = 0;
  1122  0346  01BC               	clrf	_CurrentShiftBuffer
  1123  0347  01BD               	clrf	_CurrentShiftBuffer+1
  1124                           
  1125                           ;main.c: 122: TRISCbits.TRISC0 = 0;
  1126  0348  1683               	bsf	3,5	;RP0=1, select bank1
  1127  0349  1007               	bcf	7,0	;volatile
  1128                           
  1129                           ;main.c: 123: PORTCbits.RC0 = 1;
  1130  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1131  034B  1407               	bsf	7,0	;volatile
  1132                           
  1133                           ;main.c: 125: OPTION_REGbits.T0CS = 0;
  1134  034C  1683               	bsf	3,5	;RP0=1, select bank1
  1135  034D  1281               	bcf	1,5	;volatile
  1136                           
  1137                           ;main.c: 126: OPTION_REGbits.PSA = 0;
  1138  034E  1181               	bcf	1,3	;volatile
  1139                           
  1140                           ;main.c: 128: OPTION_REGbits.PS0 = 1;
  1141  034F  1401               	bsf	1,0	;volatile
  1142                           
  1143                           ;main.c: 129: OPTION_REGbits.PS1 = 1;
  1144  0350  1481               	bsf	1,1	;volatile
  1145                           
  1146                           ;main.c: 130: OPTION_REGbits.PS2 = 1;
  1147  0351  1501               	bsf	1,2	;volatile
  1148                           
  1149                           ;main.c: 134: RCSTAbits.SPEN = 1;
  1150  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0353  1798               	bsf	24,7	;volatile
  1152                           
  1153                           ;main.c: 135: RCSTAbits.RX9 = 0;
  1154  0354  1318               	bcf	24,6	;volatile
  1155                           
  1156                           ;main.c: 140: TXSTAbits.CSRC = 1;
  1157  0355  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0356  1798               	bsf	24,7	;volatile
  1159                           
  1160                           ;main.c: 141: TXSTAbits.TX9 = 0;
  1161  0357  1318               	bcf	24,6	;volatile
  1162                           
  1163                           ;main.c: 142: TXSTAbits.TXEN = 1;
  1164  0358  1698               	bsf	24,5	;volatile
  1165                           
  1166                           ;main.c: 143: TXSTAbits.SYNC = 0;
  1167  0359  1218               	bcf	24,4	;volatile
  1168                           
  1169                           ;main.c: 144: TXSTAbits.BRGH = 1;
  1170  035A  1518               	bsf	24,2	;volatile
  1171                           
  1172                           ;main.c: 145: TXSTAbits.TRMT = 1;
  1173  035B  1498               	bsf	24,1	;volatile
  1174                           
  1175                           ;main.c: 146: SPBRG = 31;
  1176  035C  301F               	movlw	31
  1177  035D  0099               	movwf	25	;volatile
  1178                           
  1179                           ;main.c: 150: INTCONbits.GIE = 1;
  1180  035E  178B               	bsf	11,7	;volatile
  1181                           
  1182                           ;main.c: 151: INTCONbits.PEIE = 1;
  1183  035F  170B               	bsf	11,6	;volatile
  1184                           
  1185                           ;main.c: 152: INTCONbits.TMR0IE = 1;
  1186  0360  168B               	bsf	11,5	;volatile
  1187                           
  1188                           ;main.c: 153: INTCONbits.TMR0IF = 0;
  1189  0361  110B               	bcf	11,2	;volatile
  1190                           
  1191                           ;main.c: 154: PIE1bits.TMR1IE = 0;
  1192  0362  100C               	bcf	12,0	;volatile
  1193                           
  1194                           ;main.c: 155: PIR1bits.TMR1IF = 0;
  1195  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0364  100C               	bcf	12,0	;volatile
  1197                           
  1198                           ;main.c: 156: TMR0 = 0;
  1199  0365  0181               	clrf	1	;volatile
  1200                           
  1201                           ;main.c: 159: T1CONbits.TMR1ON = 0;
  1202  0366  1010               	bcf	16,0	;volatile
  1203                           
  1204                           ;main.c: 160: T1CONbits.T1CKPS0 = 0;
  1205  0367  1210               	bcf	16,4	;volatile
  1206                           
  1207                           ;main.c: 161: T1CONbits.T1CKPS1 = 1;
  1208  0368  1690               	bsf	16,5	;volatile
  1209                           
  1210                           ;main.c: 162: T1CONbits.T1OSCEN = 0;
  1211  0369  1190               	bcf	16,3	;volatile
  1212                           
  1213                           ;main.c: 163: T1CONbits.T1INSYNC = 0;
  1214  036A  1110               	bcf	16,2	;volatile
  1215                           
  1216                           ;main.c: 164: T1CONbits.TMR1CS = 0;
  1217  036B  1090               	bcf	16,1	;volatile
  1218                           
  1219                           ;main.c: 165: TMR1 = 0;
  1220  036C  018E               	clrf	14	;volatile
  1221  036D  018F               	clrf	15	;volatile
  1222                           
  1223                           ;main.c: 166: T1CONbits.TMR1ON = 1;
  1224  036E  1410               	bsf	16,0	;volatile
  1225                           
  1226                           ;main.c: 168: PIE1bits.TMR1IE = 0;
  1227  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1228  0370  100C               	bcf	12,0	;volatile
  1229                           
  1230                           ;main.c: 169: PIR1bits.TMR2IF = 0;
  1231  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0372  108C               	bcf	12,1	;volatile
  1233  0373  0008               	return
  1234  0374                     __end_of_SetupConfHandle:	
  1235                           
  1236                           	psect	text4
  1237  004D                     __ptext4:	
  1238 ;; *************** function _OparateSystem *****************
  1239 ;; Defined at:
  1240 ;;		line 179 in file "Source_Files/main.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  Idx             2    1[BANK0 ] unsigned int 
  1245 ;;  DataPtr         1    0[BANK0 ] PTR unsigned int 
  1246 ;;		 -> TempArray(10), 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 300/0
  1253 ;;		On exit  : 300/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       0       0       0       0
  1257 ;;      Locals:         0       3       0       0       0
  1258 ;;      Temps:          4       0       0       0       0
  1259 ;;      Totals:         4       3       0       0       0
  1260 ;;Total ram usage:        7 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    3
  1263 ;; This function calls:
  1264 ;;		_SerialPrint
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _OparateSystem
  1272  004D                     _OparateSystem:	
  1273                           
  1274                           ;main.c: 181: if( OneSecond >= 77 )
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _OparateSystem: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1278  004D  304D               	movlw	77
  1279  004E  0244               	subwf	_OneSecond,w
  1280  004F  1C03               	skipc
  1281  0050  29CC               	goto	l120
  1282                           
  1283                           ;main.c: 182: {;main.c: 183: OneSecond = 0;
  1284  0051  01C4               	clrf	_OneSecond
  1285                           
  1286                           ;main.c: 184: SystemFlag.Dht22StartRead = 1;
  1287  0052  14C3               	bsf	_SystemFlag,1
  1288                           
  1289                           ;main.c: 189: if( CurrentShiftBuffer != PreviousShiftBuffer )
  1290  0053  083B               	movf	_PreviousShiftBuffer+1,w
  1291  0054  063D               	xorwf	_CurrentShiftBuffer+1,w
  1292  0055  1D03               	skipz
  1293  0056  2859               	goto	u495
  1294  0057  083A               	movf	_PreviousShiftBuffer,w
  1295  0058  063C               	xorwf	_CurrentShiftBuffer,w
  1296  0059                     u495:	
  1297  0059  1903               	skipnz
  1298  005A  29CC               	goto	l120
  1299                           
  1300                           ;main.c: 190: {;main.c: 191: PORTBbits.RB0 = 0;
  1301  005B  1006               	bcf	6,0	;volatile
  1302                           
  1303                           ;main.c: 192: PORTBbits.RB1 = 0;
  1304  005C  1086               	bcf	6,1	;volatile
  1305                           
  1306                           ;main.c: 193: PORTBbits.RB2 = 0;
  1307  005D  1106               	bcf	6,2	;volatile
  1308                           
  1309                           ;main.c: 195: for( shiftRegIndex = 0; shiftRegIndex < 16; shiftRegIndex++ )
  1310  005E  01C2               	clrf	_shiftRegIndex
  1311  005F                     l1097:	
  1312                           
  1313                           ;main.c: 196: {;main.c: 197: if( CurrentShiftBuffer & ( 0x8000 >> shiftRegIndex ))
  1314  005F  3000               	movlw	0
  1315  0060  00F5               	movwf	??_OparateSystem
  1316  0061  3080               	movlw	128
  1317  0062  00F6               	movwf	??_OparateSystem+1
  1318  0063  0A42               	incf	_shiftRegIndex,w
  1319  0064  2868               	goto	u504
  1320  0065                     u505:	
  1321  0065  1003               	clrc
  1322  0066  0CF6               	rrf	??_OparateSystem+1,f
  1323  0067  0CF5               	rrf	??_OparateSystem,f
  1324  0068                     u504:	
  1325  0068  3EFF               	addlw	-1
  1326  0069  1D03               	skipz
  1327  006A  2865               	goto	u505
  1328  006B  083C               	movf	_CurrentShiftBuffer,w
  1329  006C  0575               	andwf	??_OparateSystem,w
  1330  006D  00F7               	movwf	??_OparateSystem+2
  1331  006E  083D               	movf	_CurrentShiftBuffer+1,w
  1332  006F  0576               	andwf	??_OparateSystem+1,w
  1333  0070  00F8               	movwf	??_OparateSystem+3
  1334  0071  0877               	movf	??_OparateSystem+2,w
  1335  0072  0478               	iorwf	??_OparateSystem+3,w
  1336  0073  1903               	btfsc	3,2
  1337  0074  2877               	goto	l118
  1338                           
  1339                           ;main.c: 198: PORTBbits.RB1 = 1;
  1340  0075  1486               	bsf	6,1	;volatile
  1341  0076  2878               	goto	l119
  1342  0077                     l118:	
  1343                           
  1344                           ;main.c: 199: else;main.c: 200: PORTBbits.RB1 = 0;
  1345  0077  1086               	bcf	6,1	;volatile
  1346  0078                     l119:	
  1347                           
  1348                           ;main.c: 202: PORTBbits.RB0 = 1;
  1349  0078  1406               	bsf	6,0	;volatile
  1350                           
  1351                           ;main.c: 203: PORTBbits.RB0 = 0;
  1352  0079  1006               	bcf	6,0	;volatile
  1353  007A  3001               	movlw	1
  1354  007B  00F5               	movwf	??_OparateSystem
  1355  007C  0875               	movf	??_OparateSystem,w
  1356  007D  07C2               	addwf	_shiftRegIndex,f
  1357  007E  3010               	movlw	16
  1358  007F  0242               	subwf	_shiftRegIndex,w
  1359  0080  1C03               	skipc
  1360  0081  285F               	goto	l1097
  1361                           
  1362                           ;main.c: 204: };main.c: 205: PORTBbits.RB2 = 1;
  1363  0082  1506               	bsf	6,2	;volatile
  1364                           
  1365                           ;main.c: 206: PORTBbits.RB2 = 0;
  1366  0083  1106               	bcf	6,2	;volatile
  1367                           
  1368                           ;main.c: 208: PreviousShiftBuffer = CurrentShiftBuffer;
  1369  0084  083D               	movf	_CurrentShiftBuffer+1,w
  1370  0085  00BB               	movwf	_PreviousShiftBuffer+1
  1371  0086  083C               	movf	_CurrentShiftBuffer,w
  1372  0087  00BA               	movwf	_PreviousShiftBuffer
  1373  0088  29CC               	goto	l120
  1374  0089                     l123:	
  1375                           ;main.c: 223: {;main.c: 224: case StartTransmitState:
  1376                           
  1377                           ;main.c: 222: switch( Dht22CurrentStatus )
  1378                           
  1379                           
  1380                           ;main.c: 225: TRISCbits.TRISC0 = 0;
  1381  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1382  008A  1007               	bcf	7,0	;volatile
  1383                           
  1384                           ;main.c: 226: PORTCbits.RC0 = 0;
  1385  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1386  008C  1007               	bcf	7,0	;volatile
  1387                           
  1388                           ;main.c: 227: TMR1H = 0 >> 8, TMR1L = 0;
  1389  008D  018F               	clrf	15	;volatile
  1390  008E  018E               	clrf	14	;volatile
  1391                           
  1392                           ;main.c: 228: CheckSum = 0;
  1393  008F  01B6               	clrf	_CheckSum
  1394  0090  01B7               	clrf	_CheckSum+1
  1395                           
  1396                           ;main.c: 229: ReceiveIndex = 0;
  1397  0091  01A4               	clrf	_ReceiveIndex
  1398  0092  01A5               	clrf	_ReceiveIndex+1
  1399                           
  1400                           ;main.c: 230: Idx = 0;
  1401  0093  01E5               	clrf	OparateSystem@Idx
  1402  0094  01E6               	clrf	OparateSystem@Idx+1
  1403                           
  1404                           ;main.c: 231: DataPtr = TempArray;
  1405  0095  3045               	movlw	(low (_TempArray| 0))& (0+255)
  1406  0096  00F5               	movwf	??_OparateSystem
  1407  0097  0875               	movf	??_OparateSystem,w
  1408  0098  00E4               	movwf	OparateSystem@DataPtr
  1409                           
  1410                           ;main.c: 232: Dht22CurrentStatus = WaitFirstTransmitState;
  1411  0099  3002               	movlw	2
  1412  009A  2941               	goto	L5
  1413  009B                     l1117:	
  1414                           ;main.c: 233: break;
  1415                           
  1416                           
  1417                           ;main.c: 236: if( TMR1 > ( 30000ul) )
  1418  009B  3075               	movlw	117
  1419  009C  020F               	subwf	15,w	;volatile
  1420  009D  3031               	movlw	49
  1421  009E  1903               	skipnz
  1422  009F  020E               	subwf	14,w	;volatile
  1423  00A0  1C03               	skipc
  1424  00A1  29CC               	goto	l120
  1425                           
  1426                           ;main.c: 237: {;main.c: 238: PORTCbits.RC0 = 1;
  1427  00A2  1407               	bsf	7,0	;volatile
  1428                           
  1429                           ;main.c: 239: TRISCbits.TRISC0 = 1;
  1430  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1431  00A4  1407               	bsf	7,0	;volatile
  1432                           
  1433                           ;main.c: 240: TMR1H = 0 >> 8, TMR1L = 0;
  1434  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1435  00A6  018F               	clrf	15	;volatile
  1436  00A7  018E               	clrf	14	;volatile
  1437                           
  1438                           ;main.c: 241: Dht22CurrentStatus = CheckresponseState;
  1439  00A8  3003               	movlw	3
  1440  00A9  2941               	goto	L5
  1441  00AA                     l1125:	
  1442                           
  1443                           ;main.c: 247: if(CurrentPinValue != PreviousPinValue )
  1444  00AA  0841               	movf	_PreviousPinValue+1,w
  1445  00AB  063F               	xorwf	_CurrentPinValue+1,w
  1446  00AC  1D03               	skipz
  1447  00AD  28B0               	goto	u545
  1448  00AE  0840               	movf	_PreviousPinValue,w
  1449  00AF  063E               	xorwf	_CurrentPinValue,w
  1450  00B0                     u545:	
  1451  00B0  1903               	skipnz
  1452  00B1  28C4               	goto	l1137
  1453                           
  1454                           ;main.c: 248: {;main.c: 249: if( CurrentPinValue )
  1455  00B2  083E               	movf	_CurrentPinValue,w
  1456  00B3  043F               	iorwf	_CurrentPinValue+1,w
  1457  00B4  1903               	btfsc	3,2
  1458  00B5  28B9               	goto	l1131
  1459  00B6                     l1129:	
  1460                           
  1461                           ;main.c: 250: TMR1H = 0 >> 8, TMR1L = 0;
  1462  00B6  018F               	clrf	15	;volatile
  1463  00B7  018E               	clrf	14	;volatile
  1464  00B8  29CC               	goto	l120
  1465  00B9                     l1131:	
  1466                           
  1467                           ;main.c: 251: else;main.c: 252: {;main.c: 253: if( TMR1 > ( 100 ) )
  1468  00B9  3000               	movlw	0
  1469  00BA  020F               	subwf	15,w	;volatile
  1470  00BB  3065               	movlw	101
  1471  00BC  1903               	skipnz
  1472  00BD  020E               	subwf	14,w	;volatile
  1473  00BE  1C03               	skipc
  1474  00BF  29CC               	goto	l120
  1475                           
  1476                           ;main.c: 254: {;main.c: 255: TMR1H = 0 >> 8, TMR1L = 0;
  1477  00C0  018F               	clrf	15	;volatile
  1478  00C1  018E               	clrf	14	;volatile
  1479                           
  1480                           ;main.c: 256: Dht22CurrentStatus = StartReadState;
  1481  00C2  3004               	movlw	4
  1482  00C3  2941               	goto	L5
  1483  00C4                     l1137:	
  1484                           
  1485                           ;main.c: 260: else;main.c: 261: {;main.c: 262: if( TMR1 > 500 )
  1486  00C4  3001               	movlw	1
  1487  00C5  020F               	subwf	15,w	;volatile
  1488  00C6  30F5               	movlw	245
  1489  00C7  1903               	skipnz
  1490  00C8  020E               	subwf	14,w	;volatile
  1491  00C9  1C03               	skipc
  1492  00CA  29CC               	goto	l120
  1493                           
  1494                           ;main.c: 263: {;main.c: 264: SerialPrint("Test Fail!\r ");
  1495  00CB  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1496  00CC                     L6:	
  1497  00CC  00F3               	movwf	SerialPrint@Text
  1498  00CD  3080               	movlw	128
  1499  00CE  00F4               	movwf	SerialPrint@Text+1
  1500  00CF  120A  118A  23A6  120A  118A  	fcall	_SerialPrint
  1501  00D4                     l1141:	
  1502                           
  1503                           ;main.c: 265: Dht22CurrentStatus = StopReadState;
  1504  00D4  3006               	movlw	6
  1505  00D5  2941               	goto	L5
  1506  00D6                     l1143:	
  1507                           
  1508                           ;main.c: 271: if(CurrentPinValue != PreviousPinValue )
  1509  00D6  0841               	movf	_PreviousPinValue+1,w
  1510  00D7  063F               	xorwf	_CurrentPinValue+1,w
  1511  00D8  1D03               	skipz
  1512  00D9  28DC               	goto	u585
  1513  00DA  0840               	movf	_PreviousPinValue,w
  1514  00DB  063E               	xorwf	_CurrentPinValue,w
  1515  00DC                     u585:	
  1516  00DC  1903               	skipnz
  1517  00DD  2945               	goto	l1167
  1518                           
  1519                           ;main.c: 272: {;main.c: 273: if( CurrentPinValue )
  1520  00DE  083E               	movf	_CurrentPinValue,w
  1521  00DF  043F               	iorwf	_CurrentPinValue+1,w
  1522  00E0  1D03               	btfss	3,2
  1523  00E1  28B6               	goto	l1129
  1524                           
  1525                           ;main.c: 275: else;main.c: 276: {;main.c: 277: if( TMR1 > 20 && TMR1 < 50 )
  1526  00E2  3000               	movlw	0
  1527  00E3  020F               	subwf	15,w	;volatile
  1528  00E4  3015               	movlw	21
  1529  00E5  1903               	skipnz
  1530  00E6  020E               	subwf	14,w	;volatile
  1531  00E7  1C03               	skipc
  1532  00E8  2909               	goto	l1155
  1533  00E9  3000               	movlw	0
  1534  00EA  020F               	subwf	15,w	;volatile
  1535  00EB  3032               	movlw	50
  1536  00EC  1903               	skipnz
  1537  00ED  020E               	subwf	14,w	;volatile
  1538  00EE  1803               	skipnc
  1539  00EF  2909               	goto	l1155
  1540                           
  1541                           ;main.c: 278: *DataPtr &= ~( 0x80 >> Idx );
  1542  00F0  0A65               	incf	OparateSystem@Idx,w
  1543  00F1  00F5               	movwf	??_OparateSystem
  1544  00F2  3080               	movlw	128
  1545  00F3  00F6               	movwf	??_OparateSystem+1
  1546  00F4  3000               	movlw	0
  1547  00F5  00F7               	movwf	??_OparateSystem+2
  1548  00F6  28FA               	goto	u624
  1549  00F7                     u625:	
  1550  00F7  0D77               	rlf	??_OparateSystem+2,w
  1551  00F8  0CF7               	rrf	??_OparateSystem+2,f
  1552  00F9  0CF6               	rrf	??_OparateSystem+1,f
  1553  00FA                     u624:	
  1554  00FA  0BF5               	decfsz	??_OparateSystem,f
  1555  00FB  28F7               	goto	u625
  1556  00FC  09F6               	comf	??_OparateSystem+1,f
  1557  00FD  09F7               	comf	??_OparateSystem+2,f
  1558  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1559  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0100  0864               	movf	OparateSystem@DataPtr,w
  1561  0101  0084               	movwf	4
  1562  0102  0876               	movf	??_OparateSystem+1,w
  1563  0103  1383               	bcf	3,7	;select IRP bank0
  1564  0104  0580               	andwf	0,f
  1565  0105  0A84               	incf	4,f
  1566  0106  0877               	movf	??_OparateSystem+2,w
  1567  0107  0580               	andwf	0,f
  1568  0108  291F               	goto	l1157
  1569  0109                     l1155:	
  1570                           
  1571                           ;main.c: 279: else;main.c: 280: *DataPtr |= ( 0x80 >> Idx );
  1572  0109  0A65               	incf	OparateSystem@Idx,w
  1573  010A  00F5               	movwf	??_OparateSystem
  1574  010B  3080               	movlw	128
  1575  010C  00F6               	movwf	??_OparateSystem+1
  1576  010D  3000               	movlw	0
  1577  010E  00F7               	movwf	??_OparateSystem+2
  1578  010F  2913               	goto	u634
  1579  0110                     u635:	
  1580  0110  0D77               	rlf	??_OparateSystem+2,w
  1581  0111  0CF7               	rrf	??_OparateSystem+2,f
  1582  0112  0CF6               	rrf	??_OparateSystem+1,f
  1583  0113                     u634:	
  1584  0113  0BF5               	decfsz	??_OparateSystem,f
  1585  0114  2910               	goto	u635
  1586  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0117  0864               	movf	OparateSystem@DataPtr,w
  1589  0118  0084               	movwf	4
  1590  0119  0876               	movf	??_OparateSystem+1,w
  1591  011A  1383               	bcf	3,7	;select IRP bank0
  1592  011B  0480               	iorwf	0,f
  1593  011C  0A84               	incf	4,f
  1594  011D  0877               	movf	??_OparateSystem+2,w
  1595  011E  0480               	iorwf	0,f
  1596  011F                     l1157:	
  1597                           
  1598                           ;main.c: 282: if( ++Idx > 7 )
  1599  011F  3001               	movlw	1
  1600  0120  07E5               	addwf	OparateSystem@Idx,f
  1601  0121  1803               	skipnc
  1602  0122  0AE6               	incf	OparateSystem@Idx+1,f
  1603  0123  3000               	movlw	0
  1604  0124  07E6               	addwf	OparateSystem@Idx+1,f
  1605  0125  3000               	movlw	0
  1606  0126  0266               	subwf	OparateSystem@Idx+1,w
  1607  0127  3008               	movlw	8
  1608  0128  1903               	skipnz
  1609  0129  0265               	subwf	OparateSystem@Idx,w
  1610  012A  1C03               	skipc
  1611  012B  29CC               	goto	l120
  1612                           
  1613                           ;main.c: 283: {;main.c: 284: Idx = 0;
  1614  012C  01E5               	clrf	OparateSystem@Idx
  1615  012D  01E6               	clrf	OparateSystem@Idx+1
  1616                           
  1617                           ;main.c: 285: if( ++ReceiveIndex < 5 )
  1618  012E  3001               	movlw	1
  1619  012F  07A4               	addwf	_ReceiveIndex,f
  1620  0130  1803               	skipnc
  1621  0131  0AA5               	incf	_ReceiveIndex+1,f
  1622  0132  3000               	movlw	0
  1623  0133  07A5               	addwf	_ReceiveIndex+1,f
  1624  0134  3000               	movlw	0
  1625  0135  0225               	subwf	_ReceiveIndex+1,w
  1626  0136  3005               	movlw	5
  1627  0137  1903               	skipnz
  1628  0138  0224               	subwf	_ReceiveIndex,w
  1629  0139  1803               	skipnc
  1630  013A  2940               	goto	l1165
  1631                           
  1632                           ;main.c: 286: *DataPtr++;
  1633  013B  3002               	movlw	2
  1634  013C  00F5               	movwf	??_OparateSystem
  1635  013D  0875               	movf	??_OparateSystem,w
  1636  013E  07E4               	addwf	OparateSystem@DataPtr,f
  1637  013F  29CC               	goto	l120
  1638  0140                     l1165:	
  1639                           
  1640                           ;main.c: 287: else;main.c: 288: Dht22CurrentStatus = ParseCollectingDateState;
  1641  0140  3005               	movlw	5
  1642  0141                     L5:	
  1643  0141  00F5               	movwf	??_OparateSystem
  1644  0142  0875               	movf	??_OparateSystem,w
  1645  0143  00CF               	movwf	_Dht22CurrentStatus
  1646  0144  29CC               	goto	l120
  1647  0145                     l1167:	
  1648                           
  1649                           ;main.c: 292: else if( TMR1 > 500 && CurrentPinValue )
  1650  0145  3001               	movlw	1
  1651  0146  020F               	subwf	15,w	;volatile
  1652  0147  30F5               	movlw	245
  1653  0148  1903               	skipnz
  1654  0149  020E               	subwf	14,w	;volatile
  1655  014A  1C03               	skipc
  1656  014B  29CC               	goto	l120
  1657  014C  083E               	movf	_CurrentPinValue,w
  1658  014D  043F               	iorwf	_CurrentPinValue+1,w
  1659  014E  1903               	btfsc	3,2
  1660  014F  29CC               	goto	l120
  1661                           
  1662                           ;main.c: 293: {;main.c: 294: SerialPrint("Time out!\r ");
  1663  0150  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1664  0151  28CC               	goto	L6
  1665  0152                     l1175:	
  1666                           
  1667                           ;main.c: 300: CheckSum = 0;
  1668  0152  01B6               	clrf	_CheckSum
  1669  0153  01B7               	clrf	_CheckSum+1
  1670                           
  1671                           ;main.c: 301: CheckSum = ( TempArray[0] + TempArray[1] + TempArray[2] + TempArray[3] );
  1672  0154  0849               	movf	_TempArray+4,w
  1673  0155  0747               	addwf	_TempArray+2,w
  1674  0156  00F5               	movwf	??_OparateSystem
  1675  0157  084A               	movf	_TempArray+5,w
  1676  0158  1803               	skipnc
  1677  0159  0A4A               	incf	_TempArray+5,w
  1678  015A  0748               	addwf	_TempArray+3,w
  1679  015B  00F6               	movwf	??_OparateSystem+1
  1680  015C  084B               	movf	_TempArray+6,w
  1681  015D  0775               	addwf	??_OparateSystem,w
  1682  015E  00F7               	movwf	??_OparateSystem+2
  1683  015F  084C               	movf	_TempArray+7,w
  1684  0160  1803               	skipnc
  1685  0161  0A4C               	incf	_TempArray+7,w
  1686  0162  0776               	addwf	??_OparateSystem+1,w
  1687  0163  00F8               	movwf	??_OparateSystem+3
  1688  0164  0845               	movf	_TempArray,w
  1689  0165  0777               	addwf	??_OparateSystem+2,w
  1690  0166  00B6               	movwf	_CheckSum
  1691  0167  0846               	movf	_TempArray+1,w
  1692  0168  1803               	skipnc
  1693  0169  0A46               	incf	_TempArray+1,w
  1694  016A  0778               	addwf	??_OparateSystem+3,w
  1695  016B  00B7               	movwf	_CheckSum+1
  1696                           
  1697                           ;main.c: 302: CheckSum = (CheckSum & 0xFF);
  1698  016C  30FF               	movlw	255
  1699  016D  0536               	andwf	_CheckSum,w
  1700  016E  00B6               	movwf	_CheckSum
  1701  016F  3000               	movlw	0
  1702  0170  0537               	andwf	_CheckSum+1,w
  1703  0171  00B7               	movwf	_CheckSum+1
  1704                           
  1705                           ;main.c: 306: if( CheckSum == TempArray[ 4 ] )
  1706  0172  0837               	movf	_CheckSum+1,w
  1707  0173  064E               	xorwf	_TempArray+9,w
  1708  0174  1D03               	skipz
  1709  0175  2978               	goto	u685
  1710  0176  0836               	movf	_CheckSum,w
  1711  0177  064D               	xorwf	_TempArray+8,w
  1712  0178                     u685:	
  1713  0178  1D03               	skipz
  1714  0179  29BF               	goto	l1207
  1715                           
  1716                           ;main.c: 307: {;main.c: 308: RhDecimalValue = TempArray[ 0 ];
  1717  017A  0846               	movf	_TempArray+1,w
  1718  017B  00B5               	movwf	_RhDecimalValue+1
  1719  017C  0845               	movf	_TempArray,w
  1720  017D  00B4               	movwf	_RhDecimalValue
  1721                           
  1722                           ;main.c: 309: RhDecimalValue <<= 8;
  1723  017E  3008               	movlw	8
  1724  017F                     u695:	
  1725  017F  1003               	clrc
  1726  0180  0DB4               	rlf	_RhDecimalValue,f
  1727  0181  0DB5               	rlf	_RhDecimalValue+1,f
  1728  0182  3EFF               	addlw	-1
  1729  0183  1D03               	skipz
  1730  0184  297F               	goto	u695
  1731                           
  1732                           ;main.c: 310: RhDecimalValue |= TempArray[ 1 ];
  1733  0185  0847               	movf	_TempArray+2,w
  1734  0186  04B4               	iorwf	_RhDecimalValue,f
  1735  0187  0848               	movf	_TempArray+3,w
  1736  0188  04B5               	iorwf	_RhDecimalValue+1,f
  1737                           
  1738                           ;main.c: 312: RhRealValue = RhDecimalValue;
  1739  0189  0835               	movf	_RhDecimalValue+1,w
  1740  018A  00AB               	movwf	_RhRealValue+1
  1741  018B  0834               	movf	_RhDecimalValue,w
  1742  018C  00AA               	movwf	_RhRealValue
  1743                           
  1744                           ;main.c: 313: RhRealValue *= 0.1f;
  1745  018D  01AA               	clrf	_RhRealValue
  1746  018E  01AB               	clrf	_RhRealValue+1
  1747                           
  1748                           ;main.c: 316: TunsignedDecimalValue = TempArray[ 2 ];
  1749  018F  084A               	movf	_TempArray+5,w
  1750  0190  00AF               	movwf	_TunsignedDecimalValue+1
  1751  0191  0849               	movf	_TempArray+4,w
  1752  0192  00AE               	movwf	_TunsignedDecimalValue
  1753                           
  1754                           ;main.c: 317: TunsignedDecimalValue <<= 8;
  1755  0193  3008               	movlw	8
  1756  0194                     u705:	
  1757  0194  1003               	clrc
  1758  0195  0DAE               	rlf	_TunsignedDecimalValue,f
  1759  0196  0DAF               	rlf	_TunsignedDecimalValue+1,f
  1760  0197  3EFF               	addlw	-1
  1761  0198  1D03               	skipz
  1762  0199  2994               	goto	u705
  1763                           
  1764                           ;main.c: 318: TunsignedDecimalValue |= TempArray[ 3 ];
  1765  019A  084B               	movf	_TempArray+6,w
  1766  019B  04AE               	iorwf	_TunsignedDecimalValue,f
  1767  019C  084C               	movf	_TempArray+7,w
  1768  019D  04AF               	iorwf	_TunsignedDecimalValue+1,f
  1769                           
  1770                           ;main.c: 320: if( TunsignedDecimalValue > 0x8000 )
  1771  019E  3080               	movlw	128
  1772  019F  022F               	subwf	_TunsignedDecimalValue+1,w
  1773  01A0  3001               	movlw	1
  1774  01A1  1903               	skipnz
  1775  01A2  022E               	subwf	_TunsignedDecimalValue,w
  1776  01A3  1C03               	skipc
  1777  01A4  29B3               	goto	l1199
  1778                           
  1779                           ;main.c: 321: {;main.c: 322: TunsignedDecimalValue -= (1 << 15);
  1780  01A5  3080               	movlw	128
  1781  01A6  02AF               	subwf	_TunsignedDecimalValue+1,f
  1782                           
  1783                           ;main.c: 323: TsignedDecimalValue = -TunsignedDecimalValue;
  1784  01A7  092E               	comf	_TunsignedDecimalValue,w
  1785  01A8  00F5               	movwf	??_OparateSystem
  1786  01A9  092F               	comf	_TunsignedDecimalValue+1,w
  1787  01AA  00F6               	movwf	??_OparateSystem+1
  1788  01AB  0AF5               	incf	??_OparateSystem,f
  1789  01AC  1903               	skipnz
  1790  01AD  0AF6               	incf	??_OparateSystem+1,f
  1791  01AE  0875               	movf	??_OparateSystem,w
  1792  01AF  00AC               	movwf	_TsignedDecimalValue
  1793  01B0  0876               	movf	??_OparateSystem+1,w
  1794  01B1  00AD               	movwf	_TsignedDecimalValue+1
  1795                           
  1796                           ;main.c: 324: }
  1797  01B2  29B7               	goto	l1201
  1798  01B3                     l1199:	
  1799                           
  1800                           ;main.c: 325: else;main.c: 326: TsignedDecimalValue = TunsignedDecimalValue;
  1801  01B3  082F               	movf	_TunsignedDecimalValue+1,w
  1802  01B4  00AD               	movwf	_TsignedDecimalValue+1
  1803  01B5  082E               	movf	_TunsignedDecimalValue,w
  1804  01B6  00AC               	movwf	_TsignedDecimalValue
  1805  01B7                     l1201:	
  1806                           
  1807                           ;main.c: 330: TRealValue *= 0.1f;
  1808  01B7  01A8               	clrf	_TRealValue
  1809  01B8  01A9               	clrf	_TRealValue+1
  1810                           
  1811                           ;main.c: 332: SystemFlag.SendTxEnable = 1;
  1812  01B9  1443               	bsf	_SystemFlag,0
  1813  01BA                     l1205:	
  1814                           
  1815                           ;main.c: 333: Dht22CurrentStatus = StopReadState;
  1816  01BA  3006               	movlw	6
  1817  01BB  00F5               	movwf	??_OparateSystem
  1818  01BC  0875               	movf	??_OparateSystem,w
  1819  01BD  00CF               	movwf	_Dht22CurrentStatus
  1820                           
  1821                           ;main.c: 334: }
  1822  01BE  28D4               	goto	l1141
  1823  01BF                     l1207:	
  1824                           
  1825                           ;main.c: 335: else;main.c: 336: {;main.c: 337: SerialPrint(" CheckSum Error! \r");
  1826  01BF  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1827  01C0  00F3               	movwf	SerialPrint@Text
  1828  01C1  3080               	movlw	128
  1829  01C2  00F4               	movwf	SerialPrint@Text+1
  1830  01C3  120A  118A  23A6  120A  118A  	fcall	_SerialPrint
  1831  01C8  29BA               	goto	l1205
  1832  01C9                     l150:	
  1833                           ;main.c: 344: case StopReadState:
  1834                           
  1835                           
  1836                           ;main.c: 345: SystemFlag.Dht22StartRead = 0;
  1837  01C9  10C3               	bcf	_SystemFlag,1
  1838                           
  1839                           ;main.c: 346: Dht22CurrentStatus = StartTransmitState;
  1840  01CA  01CF               	clrf	_Dht22CurrentStatus
  1841  01CB  0ACF               	incf	_Dht22CurrentStatus,f
  1842  01CC                     l120:	
  1843                           ;main.c: 347: break;
  1844                           
  1845  01CC  1CC3               	btfss	_SystemFlag,1
  1846  01CD  0008               	return
  1847                           
  1848                           ;main.c: 215: {;main.c: 216: uint8_t Idx ;;main.c: 217: uint8_t *DataPtr;;main.c: 219: P
      +                          reviousPinValue = CurrentPinValue;
  1849  01CE  083F               	movf	_CurrentPinValue+1,w
  1850  01CF  00C1               	movwf	_PreviousPinValue+1
  1851  01D0  083E               	movf	_CurrentPinValue,w
  1852  01D1  00C0               	movwf	_PreviousPinValue
  1853                           
  1854                           ;main.c: 220: CurrentPinValue = PORTCbits.RC0;
  1855  01D2  0807               	movf	7,w	;volatile
  1856  01D3  3901               	andlw	1
  1857  01D4  00F5               	movwf	??_OparateSystem
  1858  01D5  01F6               	clrf	??_OparateSystem+1
  1859  01D6  0875               	movf	??_OparateSystem,w
  1860  01D7  00BE               	movwf	_CurrentPinValue
  1861  01D8  0876               	movf	??_OparateSystem+1,w
  1862  01D9  00BF               	movwf	_CurrentPinValue+1
  1863  01DA  084F               	movf	_Dht22CurrentStatus,w
  1864                           
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 6, Range of values is 1 to 6
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte           19    10 (average)
  1870                           ; direct_byte           29    11 (fixed)
  1871                           ; jumptable            263     9 (fixed)
  1872                           ;	Chosen strategy is simple_byte
  1873  01DB  3A01               	xorlw	1	; case 1
  1874  01DC  1903               	skipnz
  1875  01DD  2889               	goto	l123
  1876  01DE  3A03               	xorlw	3	; case 2
  1877  01DF  1903               	skipnz
  1878  01E0  289B               	goto	l1117
  1879  01E1  3A01               	xorlw	1	; case 3
  1880  01E2  1903               	skipnz
  1881  01E3  28AA               	goto	l1125
  1882  01E4  3A07               	xorlw	7	; case 4
  1883  01E5  1903               	skipnz
  1884  01E6  28D6               	goto	l1143
  1885  01E7  3A01               	xorlw	1	; case 5
  1886  01E8  1903               	skipnz
  1887  01E9  2952               	goto	l1175
  1888  01EA  3A03               	xorlw	3	; case 6
  1889  01EB  1903               	skipnz
  1890  01EC  29C9               	goto	l150
  1891  01ED  29CC               	goto	l120
  1892  01EE  29CC               	goto	l120
  1893  01EF                     __end_of_OparateSystem:	
  1894                           
  1895                           	psect	text5
  1896  03A6                     __ptext5:	
  1897 ;; *************** function _SerialPrint *****************
  1898 ;; Defined at:
  1899 ;;		line 353 in file "Source_Files/main.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  Text            2    3[COMMON] PTR unsigned char 
  1902 ;;		 -> STR_3(19), STR_2(12), STR_1(13), Tmessage(25), 
  1903 ;;		 -> Rhmessage(20), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  1910 ;; Tracked objects:
  1911 ;;		On entry : 200/0
  1912 ;;		On exit  : 300/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1915 ;;      Params:         2       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0
  1918 ;;      Totals:         2       0       0       0       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used:    2
  1921 ;; Hardware stack levels required when called:    1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;;		_OparateSystem
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _SerialPrint
  1932  03A6                     _SerialPrint:	
  1933  03A6                     l1007:	
  1934                           ;main.c: 355: while( *Text != '\0')
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _SerialPrint: [wreg-fsr0h+btemp+1+pclath]
  1938                           
  1939  03A6  0874               	movf	SerialPrint@Text+1,w
  1940  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1941  03A8  00FF               	movwf	127
  1942  03A9  0873               	movf	SerialPrint@Text,w
  1943  03AA  0084               	movwf	4
  1944  03AB  120A  118A  22C3  120A  118A  	fcall	stringtab
  1945  03B0  3A00               	xorlw	0
  1946  03B1  1903               	btfsc	3,2
  1947  03B2  0008               	return
  1948                           
  1949                           ;main.c: 356: {;main.c: 357: if( TXSTAbits.TRMT )
  1950  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1951  03B4  1C98               	btfss	24,1	;volatile
  1952  03B5  2BA6               	goto	l1007
  1953                           
  1954                           ;main.c: 358: {;main.c: 359: TXREG = *Text++;
  1955  03B6  0874               	movf	SerialPrint@Text+1,w
  1956  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1957  03B8  00FF               	movwf	127
  1958  03B9  0873               	movf	SerialPrint@Text,w
  1959  03BA  0084               	movwf	4
  1960  03BB  120A  118A  22C3  120A  118A  	fcall	stringtab
  1961  03C0  0099               	movwf	25	;volatile
  1962  03C1  3001               	movlw	1
  1963  03C2  07F3               	addwf	SerialPrint@Text,f
  1964  03C3  1803               	skipnc
  1965  03C4  0AF4               	incf	SerialPrint@Text+1,f
  1966  03C5  3000               	movlw	0
  1967  03C6  07F4               	addwf	SerialPrint@Text+1,f
  1968  03C7  2BA6               	goto	l1007
  1969  03C8                     __end_of_SerialPrint:	
  1970                           
  1971                           	psect	text6
  1972  0424                     __ptext6:	
  1973 ;; *************** function _InitialVariableHande *****************
  1974 ;; Defined at:
  1975 ;;		line 173 in file "Source_Files/main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		None
  1984 ;; Tracked objects:
  1985 ;;		On entry : B00/0
  1986 ;;		On exit  : B00/0
  1987 ;;		Unchanged: 800/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _InitialVariableHande
  2005  0424                     _InitialVariableHande:	
  2006                           
  2007                           ;main.c: 175: SystemFlag.Dht22StartRead = 1;
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _InitialVariableHande: []
  2011  0424  14C3               	bsf	_SystemFlag,1
  2012                           
  2013                           ;main.c: 176: SystemFlag.SendTxEnable = 0;
  2014  0425  1043               	bcf	_SystemFlag,0
  2015  0426  0008               	return
  2016  0427                     __end_of_InitialVariableHande:	
  2017                           
  2018                           	psect	text7
  2019  03F6                     __ptext7:	
  2020 ;; *************** function _T0int *****************
  2021 ;; Defined at:
  2022 ;;		line 365 in file "Source_Files/main.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0
  2038 ;;      Temps:          3       0       0       0       0
  2039 ;;      Totals:         3       0       0       0       0
  2040 ;;Total ram usage:        3 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		Interrupt level 1
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _T0int
  2051  03F6                     _T0int:	
  2052                           
  2053                           ;main.c: 367: static unsigned char Cnt = 0;;main.c: 369: if( INTCONbits.TMR0IE && INTCON
      +                          bits.TMR0IF )
  2054  03F6  1A8B               	btfsc	11,5	;volatile
  2055  03F7  1D0B               	btfss	11,2	;volatile
  2056  03F8  2C04               	goto	i1l168
  2057                           
  2058                           ;main.c: 370: {;main.c: 371: if( OneSecond < 77 )
  2059  03F9  304D               	movlw	77
  2060  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2061  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2062  03FC  0244               	subwf	_OneSecond,w
  2063  03FD  1803               	skipnc
  2064  03FE  2C03               	goto	i1l1301
  2065                           
  2066                           ;main.c: 372: OneSecond++;
  2067  03FF  3001               	movlw	1
  2068  0400  00F0               	movwf	??_T0int
  2069  0401  0870               	movf	??_T0int,w
  2070  0402  07C4               	addwf	_OneSecond,f
  2071  0403                     i1l1301:	
  2072                           
  2073                           ;main.c: 374: INTCONbits.TMR0IF = 0;
  2074  0403  110B               	bcf	11,2	;volatile
  2075  0404                     i1l168:	
  2076  0404  0872               	movf	??_T0int+2,w
  2077  0405  008A               	movwf	10
  2078  0406  0E71               	swapf	(??_T0int+1)^(0+4294967168),w
  2079  0407  0083               	movwf	3
  2080  0408  0EFE               	swapf	126,f
  2081  0409  0E7E               	swapf	126,w
  2082  040A  0009               	retfie
  2083  040B                     __end_of_T0int:	
  2084  007E                     btemp	set	126	;btemp
  2085  007E                     wtemp0	set	126
  2086                           
  2087                           	psect	intentry
  2088  0004                     __pintentry:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _T0int: [wreg+status,2+status,0]
  2091                           
  2092  0004                     interrupt_function:	
  2093  007E                     saved_w	set	btemp
  2094  0004  00FE               	movwf	btemp
  2095  0005  0E03               	swapf	3,w
  2096  0006  00F1               	movwf	??_T0int+1
  2097  0007  080A               	movf	10,w
  2098  0008  00F2               	movwf	??_T0int+2
  2099  0009  120A  118A  2BF6   	ljmp	_T0int


Data Sizes:
    Strings     44
    Constant    0
    Data        47
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      9      77
    BANK1            80      0      65
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    SerialPrint@Text	PTR unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[19]), STR_2(CODE[12]), STR_1(CODE[13]), Tmessage(BANK1[25]), 
		 -> Rhmessage(BANK0[20]), 

    OparateSystem@DataPtr	PTR unsigned int  size(1) Largest target is 10
		 -> TempArray(BANK0[10]), 

    s	PTR unsigned char  size(1) Largest target is 40
		 -> PrintBuffer(BANK1[40]), 


Critical Paths under _main in COMMON

    _main->_OparateSystem
    _main->___lwmod
    ___lwmod->___lwdiv
    _OparateSystem->_SerialPrint

Critical Paths under _T0int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _T0int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _T0int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _T0int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _T0int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2507
                                              8 BANK0      1     1      0
               _InitialVariableHande
                      _OparateSystem
                        _SerialPrint
                    _SetupConfHandle
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1012
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     761
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupConfHandle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OparateSystem                                        7     7      0     424
                                              5 COMMON     4     4      0
                                              0 BANK0      3     3      0
                        _SerialPrint
 ---------------------------------------------------------------------------------
 (2) _SerialPrint                                          2     0      2     310
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitialVariableHande                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _T0int                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitialVariableHande
   _OparateSystem
     _SerialPrint
   _SerialPrint
   _SetupConfHandle
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _T0int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      41       7       81.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C1      12        0.0%
ABS                  0      0      C1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 21:14:51 2020

                            _s 007A                              pc 0002                    __CFG_CP$OFF 0000  
        __end_of_OparateSystem 01EF                             fsr 0004                    __CFG_LVP$ON 0000  
                          l120 01CC                            l123 0089                            l150 01C9  
                          l118 0077                            l119 0078                            u504 0068  
                          u505 0065                   __CFG_CPD$OFF 0000                            u624 00FA  
                          u705 0194                            u625 00F7                            u545 00B0  
                          u634 0113                            u635 0110                            u495 0059  
                          u585 00DC                            u685 0178                            u925 030A  
                          u695 017F                            u945 0316                            u955 0322  
                          u965 032C                            u995 037D                            fsr0 0004  
                          indf 0000                   __CFG_FOSC$HS 0000                           l1007 03A6  
                         l1201 01B7                           l1131 00B9                           l1205 01BA  
                         l1141 00D4                           l1125 00AA                           l1117 009B  
                         l1207 01BF                           l1143 00D6                           l1129 00B6  
                         l1137 00C4                           l1321 032B                           l1313 0307  
                         l1155 0109                           l1315 0315                           l1165 0140  
                         l1157 011F                           l1325 0336                           l1175 0152  
                         l1167 0145                           l1343 0396                           l1097 005F  
                         l1337 037A                           l1339 0388                           l1347 03A1  
                         l1355 01F9                           l1199 01B3                           l1367 025D  
                         STR_1 02E6                           STR_2 02F3                           STR_3 02D3  
                         u1015 038E                           u1025 0397                           _TMR0 0001  
                         _TMR1 000E                   __CFG_WRT$OFF 0000               ?_SetupConfHandle 0070  
                         _main 01EF                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 000C            _TsignedDecimalValue 002C                          ?_main 0070  
                __CFG_WDTE$OFF 0000                     _TRealValue 0028                __end_of___lwdiv 033B  
                        i1l168 0404                __end_of___lwmod 03A6                          _TMR1H 000F  
                        _TMR1L 000E                          _SPBRG 0099                          _T0int 03F6  
                        _TXREG 0019               _PreviousPinValue 0040                          _Index 0026  
           _Dht22CurrentStatus 004F                          pclath 000A                          status 0003  
                        wtemp0 007E                __initialization 000F                   __end_of_main 02C3  
                       ??_main 006C                         ?_T0int 0070                         i1l1301 0403  
                ??_SerialPrint 0075                 __CFG_PWRTE$OFF 0000                      ??___lwdiv 0077  
                    ??___lwmod 0078                   __pdataCOMMON 007A                         saved_w 007E  
      __end_of__initialization 0049                    _RhRealValue 002A                  __end_of_T0int 040B  
               __pcstackCOMMON 0070                   __pidataBANK0 03E1                   __pidataBANK1 03C8  
          __end_of_SerialPrint 03C8                   _TFractionVal 0030                        ??_T0int 0070  
               _OPTION_REGbits 0081                     _SystemFlag 0043                     __pbssBANK0 0020  
                   __pbssBANK1 00A0                     __pbssBANK3 0190  __size_of_InitialVariableHande 0003  
                   __pmaintext 01EF                     __pintentry 0004                     __stringtab 02C3  
       __size_of_OparateSystem 01A2                        _Counter 0020                    _SerialPrint 03A6  
                      _Timeout 0038       __size_of_SetupConfHandle 0039                        ___lwdiv 02FF  
                      ___lwmod 0374                        __ptext1 0374                        __ptext2 02FF  
                      __ptext3 033B                        __ptext4 004D                        __ptext5 03A6  
                      __ptext6 0424                        __ptext7 03F6                      _T1CONbits 0010  
                  _PrintBuffer 00A0                        clrloop0 041D           end_of_initialization 0049  
           _CurrentShiftBuffer 003C                      _RCSTAbits 0018                  _OparateSystem 004D  
                    _PORTBbits 0006                      _PORTCbits 0007                      _TRISBbits 0086  
                    _TRISCbits 0087                      _TXSTAbits 0098                 ?_OparateSystem 0070  
                __pidataCOMMON 0427                _CurrentPinValue 003E              ??_SetupConfHandle 0073  
          start_initialization 000F                SerialPrint@Text 0073                      _OneSecond 0044  
                    _TempArray 0045                      _Rhmessage 0050                      _TestArray 0190  
                   init_fetch0 040B                 _RhDecimalValue 0034                    __pdataBANK0 004F  
                  __pdataBANK1 00C8   __end_of_InitialVariableHande 0427           OparateSystem@DataPtr 0064  
                  __pbssCOMMON 0079                      ___latbits 0002                   _ReceiveIndex 0024  
                __pcstackBANK0 0064                   ?_SerialPrint 0073               ___lwdiv@dividend 0075  
              ??_OparateSystem 0075                       ?___lwdiv 0073                       ?___lwmod 0067  
                     T0int@Cnt 0079                      __pstrings 02C3                  _shiftRegIndex 0042  
               __size_of_T0int 0015               ___lwdiv@quotient 0065              interrupt_function 0004  
                    clear_ram0 041C                       _PIE1bits 008C                       _PIR1bits 000C  
                  __stringbase 02D2                       _CheckSum 0036           _InitialVariableHande 0424  
              _SetupConfHandle 033B                       _Tmessage 00C8               __size_of___lwdiv 003C  
             __size_of___lwmod 0032             __end_of__stringtab 02D3            _PreviousShiftBuffer 003A  
              ___lwdiv@divisor 0073                ___lwdiv@counter 0064               OparateSystem@Idx 0065  
        ?_InitialVariableHande 0070                  __size_of_main 00D4           __size_of_SerialPrint 0022  
        _TunsignedDecimalValue 002E                     _INTCONbits 000B                       init_ram0 040F  
                     intlevel1 0000        __end_of_SetupConfHandle 0374               ___lwmod@dividend 0069  
                    stringcode 02CD                  _RhFractionVal 0032                ___lwmod@divisor 0067  
              ___lwmod@counter 006B                       stringdir 02CD                       stringtab 02C3  
       ??_InitialVariableHande 0073  
