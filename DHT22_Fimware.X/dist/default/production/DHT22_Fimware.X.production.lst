

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 21:44:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181                           
   182                           	psect	idataCOMMON
   183  040D                     __pidataCOMMON:	
   184                           
   185                           ;initializer for _s
   186  040D  34A0               	retlw	low (_PrintBuffer| 0)
   187                           
   188                           	psect	idataBANK0
   189  03C7                     __pidataBANK0:	
   190                           
   191                           ;initializer for _Dht22CurrentStatus
   192  03C7  3401               	retlw	1
   193                           
   194                           ;initializer for _Rhmessage
   195  03C8  344E               	retlw	78
   196  03C9  3465               	retlw	101
   197  03CA  346D               	retlw	109
   198  03CB  343A               	retlw	58
   199  03CC  3420               	retlw	32
   200  03CD  3420               	retlw	32
   201  03CE  3420               	retlw	32
   202  03CF  3420               	retlw	32
   203  03D0  3420               	retlw	32
   204  03D1  3425               	retlw	37
   205  03D2  3420               	retlw	32
   206  03D3  3430               	retlw	48
   207  03D4  3430               	retlw	48
   208  03D5  342E               	retlw	46
   209  03D6  3430               	retlw	48
   210  03D7  3420               	retlw	32
   211  03D8  340D               	retlw	13
   212  03D9  3400               	retlw	0
   213  03DA  3400               	retlw	0
   214  03DB  3400               	retlw	0
   215                           
   216                           	psect	idataBANK1
   217  03AE                     __pidataBANK1:	
   218                           
   219                           ;initializer for _Tmessage
   220  03AE  3453               	retlw	83
   221  03AF  3469               	retlw	105
   222  03B0  3463               	retlw	99
   223  03B1  3461               	retlw	97
   224  03B2  346B               	retlw	107
   225  03B3  346C               	retlw	108
   226  03B4  3469               	retlw	105
   227  03B5  346B               	retlw	107
   228  03B6  343A               	retlw	58
   229  03B7  3420               	retlw	32
   230  03B8  3430               	retlw	48
   231  03B9  3430               	retlw	48
   232  03BA  342E               	retlw	46
   233  03BB  3430               	retlw	48
   234  03BC  3420               	retlw	32
   235  03BD  346F               	retlw	111
   236  03BE  3443               	retlw	67
   237  03BF  3420               	retlw	32
   238  03C0  340D               	retlw	13
   239  03C1  3400               	retlw	0
   240  03C2  3400               	retlw	0
   241  03C3  3400               	retlw	0
   242  03C4  3400               	retlw	0
   243  03C5  3400               	retlw	0
   244  03C6  3400               	retlw	0
   245  000E                     _TMR1	set	14
   246  0019                     _TXREG	set	25
   247  000E                     _TMR1L	set	14
   248  000F                     _TMR1H	set	15
   249  0010                     _T1CONbits	set	16
   250  0001                     _TMR0	set	1
   251  000C                     _PIR1bits	set	12
   252  0018                     _RCSTAbits	set	24
   253  0007                     _PORTCbits	set	7
   254  0006                     _PORTBbits	set	6
   255  000B                     _INTCONbits	set	11
   256  008C                     _PIE1bits	set	140
   257  0099                     _SPBRG	set	153
   258  0098                     _TXSTAbits	set	152
   259  0081                     _OPTION_REGbits	set	129
   260  0087                     _TRISCbits	set	135
   261  0086                     _TRISBbits	set	134
   262                           
   263                           	psect	strings
   264  02A9                     __pstrings:	
   265  02A9                     stringtab:	
   266  02A9                     __stringtab:	
   267                           
   268                           ;	String table - string pointers are 1 byte each
   269  02A9  1BFF               	btfsc	btemp+1,7
   270  02AA  2AB3               	ljmp	stringcode
   271  02AB  1383               	bcf	3,7
   272  02AC  187F               	btfsc	btemp+1,0
   273  02AD  1783               	bsf	3,7
   274  02AE  0800               	movf	0,w
   275  02AF  0A84               	incf	4,f
   276  02B0  1903               	skipnz
   277  02B1  0AFF               	incf	btemp+1,f
   278  02B2  0008               	return
   279  02B3                     stringcode:	
   280  02B3                     stringdir:	
   281  02B3  3002               	movlw	high stringdir
   282  02B4  008A               	movwf	10
   283  02B5  0804               	movf	4,w
   284  02B6  0A84               	incf	4,f
   285  02B7  0782               	addwf	2,f
   286  02B8                     __stringbase:	
   287  02B8  3400               	retlw	0
   288  02B9                     __end_of__stringtab:	
   289  02B9                     STR_3:	
   290  02B9  3420               	retlw	32	;' '
   291  02BA  3443               	retlw	67	;'C'
   292  02BB  3468               	retlw	104	;'h'
   293  02BC  3465               	retlw	101	;'e'
   294  02BD  3463               	retlw	99	;'c'
   295  02BE  346B               	retlw	107	;'k'
   296  02BF  3453               	retlw	83	;'S'
   297  02C0  3475               	retlw	117	;'u'
   298  02C1  346D               	retlw	109	;'m'
   299  02C2  3420               	retlw	32	;' '
   300  02C3  3445               	retlw	69	;'E'
   301  02C4  3472               	retlw	114	;'r'
   302  02C5  3472               	retlw	114	;'r'
   303  02C6  346F               	retlw	111	;'o'
   304  02C7  3472               	retlw	114	;'r'
   305  02C8  3421               	retlw	33	;'!'
   306  02C9  3420               	retlw	32	;' '
   307  02CA  340D               	retlw	13
   308  02CB  3400               	retlw	0
   309  02CC                     STR_1:	
   310  02CC  3454               	retlw	84	;'T'
   311  02CD  3465               	retlw	101	;'e'
   312  02CE  3473               	retlw	115	;'s'
   313  02CF  3474               	retlw	116	;'t'
   314  02D0  3420               	retlw	32	;' '
   315  02D1  3446               	retlw	70	;'F'
   316  02D2  3461               	retlw	97	;'a'
   317  02D3  3469               	retlw	105	;'i'
   318  02D4  346C               	retlw	108	;'l'
   319  02D5  3421               	retlw	33	;'!'
   320  02D6  340D               	retlw	13
   321  02D7  3420               	retlw	32	;' '
   322  02D8  3400               	retlw	0
   323  02D9                     STR_2:	
   324  02D9  3454               	retlw	84	;'T'
   325  02DA  3469               	retlw	105	;'i'
   326  02DB  346D               	retlw	109	;'m'
   327  02DC  3465               	retlw	101	;'e'
   328  02DD  3420               	retlw	32	;' '
   329  02DE  346F               	retlw	111	;'o'
   330  02DF  3475               	retlw	117	;'u'
   331  02E0  3474               	retlw	116	;'t'
   332  02E1  3421               	retlw	33	;'!'
   333  02E2  340D               	retlw	13
   334  02E3  3420               	retlw	32	;' '
   335  02E4  3400               	retlw	0
   336                           
   337                           ; #config settings
   338  0000                     
   339                           	psect	cinit
   340  000F                     start_initialization:	
   341  000F                     __initialization:	
   342                           
   343                           ; Initialize objects allocated to BANK1
   344  000F  1383               	bcf	3,7	;select IRP bank0
   345  0010  30E1               	movlw	low (__pdataBANK1+25)
   346  0011  00FD               	movwf	btemp+-1
   347  0012  3003               	movlw	high __pidataBANK1
   348  0013  00FE               	movwf	btemp
   349  0014  30AE               	movlw	low __pidataBANK1
   350  0015  00FF               	movwf	btemp+1
   351  0016  30C8               	movlw	low __pdataBANK1
   352  0017  0084               	movwf	4
   353  0018  120A  118A  23F5  120A  118A  	fcall	init_ram0
   354                           
   355                           ; Initialize objects allocated to BANK0
   356  001D  305E               	movlw	low (__pdataBANK0+21)
   357  001E  00FD               	movwf	btemp+-1
   358  001F  3003               	movlw	high __pidataBANK0
   359  0020  00FE               	movwf	btemp
   360  0021  30C7               	movlw	low __pidataBANK0
   361  0022  00FF               	movwf	btemp+1
   362  0023  3049               	movlw	low __pdataBANK0
   363  0024  0084               	movwf	4
   364  0025  120A  118A  23F5  120A  118A  	fcall	init_ram0
   365                           
   366                           ; Initialize objects allocated to COMMON
   367  002A  120A  118A  240D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   368  002F  00FA               	movwf	__pdataCOMMON& (0+127)
   369                           
   370                           ; Clear objects allocated to BANK3
   371  0030  1783               	bsf	3,7	;select IRP bank2
   372  0031  3090               	movlw	low __pbssBANK3
   373  0032  0084               	movwf	4
   374  0033  30B8               	movlw	low (__pbssBANK3+40)
   375  0034  120A  118A  2402  120A  118A  	fcall	clear_ram0
   376                           
   377                           ; Clear objects allocated to BANK1
   378  0039  1383               	bcf	3,7	;select IRP bank0
   379  003A  30A0               	movlw	low __pbssBANK1
   380  003B  0084               	movwf	4
   381  003C  30C8               	movlw	low (__pbssBANK1+40)
   382  003D  120A  118A  2402  120A  118A  	fcall	clear_ram0
   383                           
   384                           ; Clear objects allocated to BANK0
   385  0042  3020               	movlw	low __pbssBANK0
   386  0043  0084               	movwf	4
   387  0044  3049               	movlw	low (__pbssBANK0+41)
   388  0045  120A  118A  2402   	fcall	clear_ram0
   389                           
   390                           ; Clear objects allocated to COMMON
   391  0048  01F9               	clrf	__pbssCOMMON& (0+127)
   392  0049                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  0049                     __end_of__initialization:	
   396  0049  0183               	clrf	3
   397  004A  120A  118A  29CE   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMMON
   400  0079                     __pbssCOMMON:	
   401  0079                     T0int@Cnt:	
   402  0079                     	ds	1
   403                           
   404                           	psect	dataCOMMON
   405  007A                     __pdataCOMMON:	
   406  007A                     _s:	
   407  007A                     	ds	1
   408                           
   409                           	psect	bssBANK0
   410  0020                     __pbssBANK0:	
   411  0020                     _Counter:	
   412  0020                     	ds	4
   413  0024                     _ReceiveIndex:	
   414  0024                     	ds	2
   415  0026                     _Index:	
   416  0026                     	ds	2
   417  0028                     _TunsignedDecimalValue:	
   418  0028                     	ds	2
   419  002A                     _TFractionVal:	
   420  002A                     	ds	2
   421  002C                     _RhFractionVal:	
   422  002C                     	ds	2
   423  002E                     _RhDecimalValue:	
   424  002E                     	ds	2
   425  0030                     _CheckSum:	
   426  0030                     	ds	2
   427  0032                     _Timeout:	
   428  0032                     	ds	2
   429  0034                     _PreviousShiftBuffer:	
   430  0034                     	ds	2
   431  0036                     _CurrentShiftBuffer:	
   432  0036                     	ds	2
   433  0038                     _CurrentPinValue:	
   434  0038                     	ds	2
   435  003A                     _PreviousPinValue:	
   436  003A                     	ds	2
   437  003C                     _shiftRegIndex:	
   438  003C                     	ds	1
   439  003D                     _SystemFlag:	
   440  003D                     	ds	1
   441  003E                     _OneSecond:	
   442  003E                     	ds	1
   443  003F                     _TempArray:	
   444  003F                     	ds	10
   445                           
   446                           	psect	dataBANK0
   447  0049                     __pdataBANK0:	
   448  0049                     _Dht22CurrentStatus:	
   449  0049                     	ds	1
   450  004A                     _Rhmessage:	
   451  004A                     	ds	20
   452                           
   453                           	psect	bssBANK1
   454  00A0                     __pbssBANK1:	
   455  00A0                     _PrintBuffer:	
   456  00A0                     	ds	40
   457                           
   458                           	psect	dataBANK1
   459  00C8                     __pdataBANK1:	
   460  00C8                     _Tmessage:	
   461  00C8                     	ds	25
   462                           
   463                           	psect	bssBANK3
   464  0190                     __pbssBANK3:	
   465  0190                     _TestArray:	
   466  0190                     	ds	40
   467                           
   468                           	psect	inittext
   469  03F1                     init_fetch0:	
   470                           ;	Called with low address in FSR and high address in W
   471                           
   472  03F1  087E               	movf	126,w
   473  03F2  008A               	movwf	10
   474  03F3  087F               	movf	127,w
   475  03F4  0082               	movwf	2
   476  03F5                     init_ram0:	
   477                           ;Called with:
   478                           ;	high address of idata address in btemp 
   479                           ;	low address of idata address in btemp+1 
   480                           ;	low address of data in FSR
   481                           ;	high address + 1 of data in btemp-1
   482                           
   483  03F5  23F1  120A  118A   	fcall	init_fetch0
   484  03F8  0080               	movwf	0
   485  03F9  0A84               	incf	4,f
   486  03FA  0804               	movf	4,w
   487  03FB  067D               	xorwf	125,w
   488  03FC  1903               	btfsc	3,2
   489  03FD  3400               	retlw	0
   490  03FE  0AFF               	incf	127,f
   491  03FF  1903               	btfsc	3,2
   492  0400  0AFE               	incf	126,f
   493  0401  2BF5               	goto	init_ram0
   494                           
   495                           	psect	clrtext
   496  0402                     clear_ram0:	
   497                           ;	Called with FSR containing the base address, and
   498                           ;	W with the last address+1
   499                           
   500  0402  0064               	clrwdt	;clear the watchdog before getting into this loop
   501  0403                     clrloop0:	
   502  0403  0180               	clrf	0	;clear RAM location pointed to by FSR
   503  0404  0A84               	incf	4,f	;increment pointer
   504  0405  0604               	xorwf	4,w	;XOR with final address
   505  0406  1903               	btfsc	3,2	;have we reached the end yet?
   506  0407  3400               	retlw	0	;all done for this memory range, return
   507  0408  0604               	xorwf	4,w	;XOR again to restore value
   508  0409  2C03               	goto	clrloop0	;do the next byte
   509                           
   510                           	psect	cstackCOMMON
   511  0070                     __pcstackCOMMON:	
   512  0070                     ?_SetupConfHandle:	
   513  0070                     ?_InitialVariableHande:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_OparateSystem:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_main:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_T0int:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_T0int:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 1 bytes @ 0x0
   530  0070                     	ds	3
   531  0073                     ??_SetupConfHandle:	
   532  0073                     ??_InitialVariableHande:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ?_SerialPrint:	
   536                           ; 1 bytes @ 0x3
   537                           
   538  0073                     ?___lwdiv:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     SerialPrint@Text:	
   542                           ; 2 bytes @ 0x3
   543                           
   544  0073                     ___lwdiv@divisor:	
   545                           ; 2 bytes @ 0x3
   546                           
   547                           
   548                           ; 2 bytes @ 0x3
   549  0073                     	ds	2
   550  0075                     ??_OparateSystem:	
   551  0075                     ??_SerialPrint:	
   552                           ; 1 bytes @ 0x5
   553                           
   554  0075                     ___lwdiv@dividend:	
   555                           ; 1 bytes @ 0x5
   556                           
   557                           
   558                           ; 2 bytes @ 0x5
   559  0075                     	ds	2
   560  0077                     ??___lwdiv:	
   561                           
   562                           ; 1 bytes @ 0x7
   563  0077                     	ds	1
   564  0078                     ??___lwmod:	
   565                           
   566                           ; 1 bytes @ 0x8
   567  0078                     	ds	1
   568                           
   569                           	psect	cstackBANK0
   570  005E                     __pcstackBANK0:	
   571  005E                     OparateSystem@DataPtr:	
   572  005E                     ___lwdiv@counter:	
   573                           ; 1 bytes @ 0x0
   574                           
   575                           
   576                           ; 1 bytes @ 0x0
   577  005E                     	ds	1
   578  005F                     OparateSystem@Idx:	
   579  005F                     ___lwdiv@quotient:	
   580                           ; 2 bytes @ 0x1
   581                           
   582                           
   583                           ; 2 bytes @ 0x1
   584  005F                     	ds	2
   585  0061                     ?___lwmod:	
   586  0061                     ___lwmod@divisor:	
   587                           ; 2 bytes @ 0x3
   588                           
   589                           
   590                           ; 2 bytes @ 0x3
   591  0061                     	ds	2
   592  0063                     ___lwmod@dividend:	
   593                           
   594                           ; 2 bytes @ 0x5
   595  0063                     	ds	2
   596  0065                     ___lwmod@counter:	
   597                           
   598                           ; 1 bytes @ 0x7
   599  0065                     	ds	1
   600  0066                     ??_main:	
   601                           
   602                           ; 1 bytes @ 0x8
   603  0066                     	ds	1
   604                           
   605                           	psect	maintext
   606  01CE                     __pmaintext:	
   607 ;;
   608 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   609 ;;
   610 ;; *************** function _main *****************
   611 ;; Defined at:
   612 ;;		line 69 in file "Source_Files/main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : B00/0
   623 ;;		On exit  : 300/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       1       0       0       0
   629 ;;      Totals:         0       1       0       0       0
   630 ;;Total ram usage:        1 bytes
   631 ;; Hardware stack levels required when called:    4
   632 ;; This function calls:
   633 ;;		_InitialVariableHande
   634 ;;		_OparateSystem
   635 ;;		_SerialPrint
   636 ;;		_SetupConfHandle
   637 ;;		___lwdiv
   638 ;;		___lwmod
   639 ;; This function is called by:
   640 ;;		Startup code after reset
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _main
   646  01CE                     _main:	
   647                           
   648                           ;main.c: 71: SetupConfHandle();
   649                           
   650                           ;incstack = 0
   651                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   652  01CE  120A  118A  2321  120A  118A  	fcall	_SetupConfHandle
   653                           
   654                           ;main.c: 72: InitialVariableHande();
   655  01D3  120A  118A  240A  120A  118A  	fcall	_InitialVariableHande
   656  01D8                     l1307:	
   657                           
   658                           ;main.c: 75: {;main.c: 76: OparateSystem();
   659  01D8  120A  118A  204D  120A  118A  	fcall	_OparateSystem
   660                           
   661                           ;main.c: 77: if( SystemFlag.SendTxEnable == 1 )
   662  01DD  1C3D               	btfss	_SystemFlag,0
   663  01DE  29D8               	goto	l1307
   664                           
   665                           ;main.c: 78: {;main.c: 79: Rhmessage[11] = (RhDecimalValue/100)%10 + 48;
   666  01DF  300A               	movlw	10
   667  01E0  00E1               	movwf	___lwmod@divisor
   668  01E1  3000               	movlw	0
   669  01E2  00E2               	movwf	___lwmod@divisor+1
   670  01E3  3064               	movlw	100
   671  01E4  00F3               	movwf	___lwdiv@divisor
   672  01E5  3000               	movlw	0
   673  01E6  00F4               	movwf	___lwdiv@divisor+1
   674  01E7  082F               	movf	_RhDecimalValue+1,w
   675  01E8  00F6               	movwf	___lwdiv@dividend+1
   676  01E9  082E               	movf	_RhDecimalValue,w
   677  01EA  00F5               	movwf	___lwdiv@dividend
   678  01EB  120A  118A  22E5  120A  118A  	fcall	___lwdiv
   679  01F0  0874               	movf	?___lwdiv+1,w
   680  01F1  00E4               	movwf	___lwmod@dividend+1
   681  01F2  0873               	movf	?___lwdiv,w
   682  01F3  00E3               	movwf	___lwmod@dividend
   683  01F4  120A  118A  235A  120A  118A  	fcall	___lwmod
   684  01F9  0861               	movf	?___lwmod,w
   685  01FA  3E30               	addlw	48
   686  01FB  00E6               	movwf	??_main
   687  01FC  0866               	movf	??_main,w
   688  01FD  00D5               	movwf	_Rhmessage+11
   689                           
   690                           ;main.c: 80: Rhmessage[12] = (RhDecimalValue/10)%10 + 48;
   691  01FE  300A               	movlw	10
   692  01FF  00E1               	movwf	___lwmod@divisor
   693  0200  3000               	movlw	0
   694  0201  00E2               	movwf	___lwmod@divisor+1
   695  0202  300A               	movlw	10
   696  0203  00F3               	movwf	___lwdiv@divisor
   697  0204  3000               	movlw	0
   698  0205  00F4               	movwf	___lwdiv@divisor+1
   699  0206  082F               	movf	_RhDecimalValue+1,w
   700  0207  00F6               	movwf	___lwdiv@dividend+1
   701  0208  082E               	movf	_RhDecimalValue,w
   702  0209  00F5               	movwf	___lwdiv@dividend
   703  020A  120A  118A  22E5  120A  118A  	fcall	___lwdiv
   704  020F  0874               	movf	?___lwdiv+1,w
   705  0210  00E4               	movwf	___lwmod@dividend+1
   706  0211  0873               	movf	?___lwdiv,w
   707  0212  00E3               	movwf	___lwmod@dividend
   708  0213  120A  118A  235A  120A  118A  	fcall	___lwmod
   709  0218  0861               	movf	?___lwmod,w
   710  0219  3E30               	addlw	48
   711  021A  00E6               	movwf	??_main
   712  021B  0866               	movf	??_main,w
   713  021C  00D6               	movwf	_Rhmessage+12
   714                           
   715                           ;main.c: 81: Rhmessage[14] = (RhDecimalValue%10) + 48;
   716  021D  300A               	movlw	10
   717  021E  00E1               	movwf	___lwmod@divisor
   718  021F  3000               	movlw	0
   719  0220  00E2               	movwf	___lwmod@divisor+1
   720  0221  082F               	movf	_RhDecimalValue+1,w
   721  0222  00E4               	movwf	___lwmod@dividend+1
   722  0223  082E               	movf	_RhDecimalValue,w
   723  0224  00E3               	movwf	___lwmod@dividend
   724  0225  120A  118A  235A  120A  118A  	fcall	___lwmod
   725  022A  0861               	movf	?___lwmod,w
   726  022B  3E30               	addlw	48
   727  022C  00E6               	movwf	??_main
   728  022D  0866               	movf	??_main,w
   729  022E  00D8               	movwf	_Rhmessage+14
   730                           
   731                           ;main.c: 83: SerialPrint( Rhmessage );
   732  022F  304A               	movlw	(low (_Rhmessage| 0))& (0+255)
   733  0230  00F3               	movwf	SerialPrint@Text
   734  0231  3000               	movlw	0
   735  0232  00F4               	movwf	SerialPrint@Text+1
   736  0233  120A  118A  238C  120A  118A  	fcall	_SerialPrint
   737                           
   738                           ;main.c: 85: if( TunsignedDecimalValue > 0x8000 )
   739  0238  3080               	movlw	128
   740  0239  0229               	subwf	_TunsignedDecimalValue+1,w
   741  023A  3001               	movlw	1
   742  023B  1903               	skipnz
   743  023C  0228               	subwf	_TunsignedDecimalValue,w
   744  023D  1C03               	skipc
   745  023E  2A43               	goto	l1319
   746                           
   747                           ;main.c: 86: {;main.c: 87: TunsignedDecimalValue -= ( 1<< 15 );
   748  023F  3080               	movlw	128
   749  0240  02A9               	subwf	_TunsignedDecimalValue+1,f
   750                           
   751                           ;main.c: 88: Tmessage[9] ='-';
   752  0241  302D               	movlw	45
   753  0242  2A44               	goto	L1
   754  0243                     l1319:	
   755                           ;main.c: 89: }
   756                           
   757                           
   758                           ;main.c: 90: else;main.c: 91: Tmessage[9] =' ';
   759  0243  3020               	movlw	32
   760  0244                     L1:	
   761  0244  00E6               	movwf	??_main
   762  0245  0866               	movf	??_main,w
   763  0246  1683               	bsf	3,5	;RP0=1, select bank1
   764  0247  00D1               	movwf	(_Tmessage^(0+128)+9)
   765                           
   766                           ;main.c: 93: Tmessage[10] = (TunsignedDecimalValue/100)%10 + 48;
   767  0248  300A               	movlw	10
   768  0249  1283               	bcf	3,5	;RP0=0, select bank0
   769  024A  00E1               	movwf	___lwmod@divisor
   770  024B  3000               	movlw	0
   771  024C  00E2               	movwf	___lwmod@divisor+1
   772  024D  3064               	movlw	100
   773  024E  00F3               	movwf	___lwdiv@divisor
   774  024F  3000               	movlw	0
   775  0250  00F4               	movwf	___lwdiv@divisor+1
   776  0251  0829               	movf	_TunsignedDecimalValue+1,w
   777  0252  00F6               	movwf	___lwdiv@dividend+1
   778  0253  0828               	movf	_TunsignedDecimalValue,w
   779  0254  00F5               	movwf	___lwdiv@dividend
   780  0255  120A  118A  22E5  120A  118A  	fcall	___lwdiv
   781  025A  0874               	movf	?___lwdiv+1,w
   782  025B  00E4               	movwf	___lwmod@dividend+1
   783  025C  0873               	movf	?___lwdiv,w
   784  025D  00E3               	movwf	___lwmod@dividend
   785  025E  120A  118A  235A  120A  118A  	fcall	___lwmod
   786  0263  0861               	movf	?___lwmod,w
   787  0264  3E30               	addlw	48
   788  0265  00E6               	movwf	??_main
   789  0266  0866               	movf	??_main,w
   790  0267  1683               	bsf	3,5	;RP0=1, select bank1
   791  0268  00D2               	movwf	(_Tmessage^(0+128)+10)
   792                           
   793                           ;main.c: 94: Tmessage[11] = (TunsignedDecimalValue/10)%10 + 48;
   794  0269  300A               	movlw	10
   795  026A  1283               	bcf	3,5	;RP0=0, select bank0
   796  026B  00E1               	movwf	___lwmod@divisor
   797  026C  3000               	movlw	0
   798  026D  00E2               	movwf	___lwmod@divisor+1
   799  026E  300A               	movlw	10
   800  026F  00F3               	movwf	___lwdiv@divisor
   801  0270  3000               	movlw	0
   802  0271  00F4               	movwf	___lwdiv@divisor+1
   803  0272  0829               	movf	_TunsignedDecimalValue+1,w
   804  0273  00F6               	movwf	___lwdiv@dividend+1
   805  0274  0828               	movf	_TunsignedDecimalValue,w
   806  0275  00F5               	movwf	___lwdiv@dividend
   807  0276  120A  118A  22E5  120A  118A  	fcall	___lwdiv
   808  027B  0874               	movf	?___lwdiv+1,w
   809  027C  00E4               	movwf	___lwmod@dividend+1
   810  027D  0873               	movf	?___lwdiv,w
   811  027E  00E3               	movwf	___lwmod@dividend
   812  027F  120A  118A  235A  120A  118A  	fcall	___lwmod
   813  0284  0861               	movf	?___lwmod,w
   814  0285  3E30               	addlw	48
   815  0286  00E6               	movwf	??_main
   816  0287  0866               	movf	??_main,w
   817  0288  1683               	bsf	3,5	;RP0=1, select bank1
   818  0289  00D3               	movwf	(_Tmessage^(0+128)+11)
   819                           
   820                           ;main.c: 95: Tmessage[13] = (TunsignedDecimalValue%10) + 48;
   821  028A  300A               	movlw	10
   822  028B  1283               	bcf	3,5	;RP0=0, select bank0
   823  028C  00E1               	movwf	___lwmod@divisor
   824  028D  3000               	movlw	0
   825  028E  00E2               	movwf	___lwmod@divisor+1
   826  028F  0829               	movf	_TunsignedDecimalValue+1,w
   827  0290  00E4               	movwf	___lwmod@dividend+1
   828  0291  0828               	movf	_TunsignedDecimalValue,w
   829  0292  00E3               	movwf	___lwmod@dividend
   830  0293  120A  118A  235A  120A  118A  	fcall	___lwmod
   831  0298  0861               	movf	?___lwmod,w
   832  0299  3E30               	addlw	48
   833  029A  00E6               	movwf	??_main
   834  029B  0866               	movf	??_main,w
   835  029C  1683               	bsf	3,5	;RP0=1, select bank1
   836  029D  00D5               	movwf	(_Tmessage^(0+128)+13)
   837                           
   838                           ;main.c: 97: SerialPrint( Tmessage );
   839  029E  30C8               	movlw	(low (_Tmessage| 0))& (0+255)
   840  029F  00F3               	movwf	SerialPrint@Text
   841  02A0  3000               	movlw	0
   842  02A1  00F4               	movwf	SerialPrint@Text+1
   843  02A2  120A  118A  238C  120A  118A  	fcall	_SerialPrint
   844                           
   845                           ;main.c: 99: SystemFlag.SendTxEnable = 0;
   846  02A7  103D               	bcf	_SystemFlag,0
   847  02A8  29D8               	goto	l1307
   848  02A9                     __end_of_main:	
   849                           
   850                           	psect	text1
   851  035A                     __ptext1:	
   852 ;; *************** function ___lwmod *****************
   853 ;; Defined at:
   854 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  divisor         2    3[BANK0 ] unsigned int 
   857 ;;  dividend        2    5[BANK0 ] unsigned int 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  counter         1    7[BANK0 ] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2    3[BANK0 ] unsigned int 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 300/0
   866 ;;		On exit  : 300/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       4       0       0       0
   870 ;;      Locals:         0       1       0       0       0
   871 ;;      Temps:          1       0       0       0       0
   872 ;;      Totals:         1       5       0       0       0
   873 ;;Total ram usage:        6 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function ___lwmod
   885  035A                     ___lwmod:	
   886                           
   887                           ;incstack = 0
   888                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   889  035A  0861               	movf	___lwmod@divisor,w
   890  035B  0462               	iorwf	___lwmod@divisor+1,w
   891  035C  1903               	btfsc	3,2
   892  035D  2B87               	goto	l1299
   893  035E  01E5               	clrf	___lwmod@counter
   894  035F  0AE5               	incf	___lwmod@counter,f
   895  0360                     l1289:	
   896  0360  1BE2               	btfsc	___lwmod@divisor+1,7
   897  0361  2B6E               	goto	l1291
   898  0362  3001               	movlw	1
   899  0363                     u975:	
   900  0363  1003               	clrc
   901  0364  0DE1               	rlf	___lwmod@divisor,f
   902  0365  0DE2               	rlf	___lwmod@divisor+1,f
   903  0366  3EFF               	addlw	-1
   904  0367  1D03               	skipz
   905  0368  2B63               	goto	u975
   906  0369  3001               	movlw	1
   907  036A  00F8               	movwf	??___lwmod
   908  036B  0878               	movf	??___lwmod,w
   909  036C  07E5               	addwf	___lwmod@counter,f
   910  036D  2B60               	goto	l1289
   911  036E                     l1291:	
   912  036E  0862               	movf	___lwmod@divisor+1,w
   913  036F  0264               	subwf	___lwmod@dividend+1,w
   914  0370  1D03               	skipz
   915  0371  2B74               	goto	u995
   916  0372  0861               	movf	___lwmod@divisor,w
   917  0373  0263               	subwf	___lwmod@dividend,w
   918  0374                     u995:	
   919  0374  1C03               	skipc
   920  0375  2B7C               	goto	l1295
   921  0376  0861               	movf	___lwmod@divisor,w
   922  0377  02E3               	subwf	___lwmod@dividend,f
   923  0378  0862               	movf	___lwmod@divisor+1,w
   924  0379  1C03               	skipc
   925  037A  03E4               	decf	___lwmod@dividend+1,f
   926  037B  02E4               	subwf	___lwmod@dividend+1,f
   927  037C                     l1295:	
   928  037C  3001               	movlw	1
   929  037D                     u1005:	
   930  037D  1003               	clrc
   931  037E  0CE2               	rrf	___lwmod@divisor+1,f
   932  037F  0CE1               	rrf	___lwmod@divisor,f
   933  0380  3EFF               	addlw	-1
   934  0381  1D03               	skipz
   935  0382  2B7D               	goto	u1005
   936  0383  3001               	movlw	1
   937  0384  02E5               	subwf	___lwmod@counter,f
   938  0385  1D03               	btfss	3,2
   939  0386  2B6E               	goto	l1291
   940  0387                     l1299:	
   941  0387  0864               	movf	___lwmod@dividend+1,w
   942  0388  00E2               	movwf	?___lwmod+1
   943  0389  0863               	movf	___lwmod@dividend,w
   944  038A  00E1               	movwf	?___lwmod
   945  038B  0008               	return
   946  038C                     __end_of___lwmod:	
   947                           
   948                           	psect	text2
   949  02E5                     __ptext2:	
   950 ;; *************** function ___lwdiv *****************
   951 ;; Defined at:
   952 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  divisor         2    3[COMMON] unsigned int 
   955 ;;  dividend        2    5[COMMON] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  quotient        2    1[BANK0 ] unsigned int 
   958 ;;  counter         1    0[BANK0 ] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2    3[COMMON] unsigned int 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 300/0
   965 ;;		On exit  : 300/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         4       0       0       0       0
   969 ;;      Locals:         0       3       0       0       0
   970 ;;      Temps:          1       0       0       0       0
   971 ;;      Totals:         5       3       0       0       0
   972 ;;Total ram usage:        8 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function ___lwdiv
   984  02E5                     ___lwdiv:	
   985                           
   986                           ;incstack = 0
   987                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   988  02E5  01DF               	clrf	___lwdiv@quotient
   989  02E6  01E0               	clrf	___lwdiv@quotient+1
   990  02E7  0873               	movf	___lwdiv@divisor,w
   991  02E8  0474               	iorwf	___lwdiv@divisor+1,w
   992  02E9  1903               	btfsc	3,2
   993  02EA  2B1C               	goto	l1277
   994  02EB  01DE               	clrf	___lwdiv@counter
   995  02EC  0ADE               	incf	___lwdiv@counter,f
   996  02ED                     l1265:	
   997  02ED  1BF4               	btfsc	___lwdiv@divisor+1,7
   998  02EE  2AFB               	goto	l1267
   999  02EF  3001               	movlw	1
  1000  02F0                     u905:	
  1001  02F0  1003               	clrc
  1002  02F1  0DF3               	rlf	___lwdiv@divisor,f
  1003  02F2  0DF4               	rlf	___lwdiv@divisor+1,f
  1004  02F3  3EFF               	addlw	-1
  1005  02F4  1D03               	skipz
  1006  02F5  2AF0               	goto	u905
  1007  02F6  3001               	movlw	1
  1008  02F7  00F7               	movwf	??___lwdiv
  1009  02F8  0877               	movf	??___lwdiv,w
  1010  02F9  07DE               	addwf	___lwdiv@counter,f
  1011  02FA  2AED               	goto	l1265
  1012  02FB                     l1267:	
  1013  02FB  3001               	movlw	1
  1014  02FC                     u925:	
  1015  02FC  1003               	clrc
  1016  02FD  0DDF               	rlf	___lwdiv@quotient,f
  1017  02FE  0DE0               	rlf	___lwdiv@quotient+1,f
  1018  02FF  3EFF               	addlw	-1
  1019  0300  1D03               	skipz
  1020  0301  2AFC               	goto	u925
  1021  0302  0874               	movf	___lwdiv@divisor+1,w
  1022  0303  0276               	subwf	___lwdiv@dividend+1,w
  1023  0304  1D03               	skipz
  1024  0305  2B08               	goto	u935
  1025  0306  0873               	movf	___lwdiv@divisor,w
  1026  0307  0275               	subwf	___lwdiv@dividend,w
  1027  0308                     u935:	
  1028  0308  1C03               	skipc
  1029  0309  2B11               	goto	l1273
  1030  030A  0873               	movf	___lwdiv@divisor,w
  1031  030B  02F5               	subwf	___lwdiv@dividend,f
  1032  030C  0874               	movf	___lwdiv@divisor+1,w
  1033  030D  1C03               	skipc
  1034  030E  03F6               	decf	___lwdiv@dividend+1,f
  1035  030F  02F6               	subwf	___lwdiv@dividend+1,f
  1036  0310  145F               	bsf	___lwdiv@quotient,0
  1037  0311                     l1273:	
  1038  0311  3001               	movlw	1
  1039  0312                     u945:	
  1040  0312  1003               	clrc
  1041  0313  0CF4               	rrf	___lwdiv@divisor+1,f
  1042  0314  0CF3               	rrf	___lwdiv@divisor,f
  1043  0315  3EFF               	addlw	-1
  1044  0316  1D03               	skipz
  1045  0317  2B12               	goto	u945
  1046  0318  3001               	movlw	1
  1047  0319  02DE               	subwf	___lwdiv@counter,f
  1048  031A  1D03               	btfss	3,2
  1049  031B  2AFB               	goto	l1267
  1050  031C                     l1277:	
  1051  031C  0860               	movf	___lwdiv@quotient+1,w
  1052  031D  00F4               	movwf	?___lwdiv+1
  1053  031E  085F               	movf	___lwdiv@quotient,w
  1054  031F  00F3               	movwf	?___lwdiv
  1055  0320  0008               	return
  1056  0321                     __end_of___lwdiv:	
  1057                           
  1058                           	psect	text3
  1059  0321                     __ptext3:	
  1060 ;; *************** function _SetupConfHandle *****************
  1061 ;; Defined at:
  1062 ;;		line 105 in file "Source_Files/main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2
  1071 ;; Tracked objects:
  1072 ;;		On entry : B00/0
  1073 ;;		On exit  : B00/0
  1074 ;;		Unchanged: 800/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _SetupConfHandle
  1092  0321                     _SetupConfHandle:	
  1093                           
  1094                           ;main.c: 108: INTCONbits.GIE = 0;
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _SetupConfHandle: [wreg+status,2]
  1098  0321  138B               	bcf	11,7	;volatile
  1099                           
  1100                           ;main.c: 110: TRISBbits.TRISB0 = 0;
  1101  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0323  1006               	bcf	6,0	;volatile
  1103                           
  1104                           ;main.c: 111: TRISBbits.TRISB1 = 0;
  1105  0324  1086               	bcf	6,1	;volatile
  1106                           
  1107                           ;main.c: 112: TRISBbits.TRISB2 = 0;
  1108  0325  1106               	bcf	6,2	;volatile
  1109                           
  1110                           ;main.c: 113: TRISCbits.TRISC6 = 0;
  1111  0326  1307               	bcf	7,6	;volatile
  1112                           
  1113                           ;main.c: 114: TRISCbits.TRISC2 = 0;
  1114  0327  1107               	bcf	7,2	;volatile
  1115                           
  1116                           ;main.c: 116: PORTBbits.RB0 = 0;
  1117  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0329  1006               	bcf	6,0	;volatile
  1119                           
  1120                           ;main.c: 117: PORTBbits.RB1 = 0;
  1121  032A  1086               	bcf	6,1	;volatile
  1122                           
  1123                           ;main.c: 118: PORTBbits.RB2 = 0;
  1124  032B  1106               	bcf	6,2	;volatile
  1125                           
  1126                           ;main.c: 119: CurrentShiftBuffer = 0;
  1127  032C  01B6               	clrf	_CurrentShiftBuffer
  1128  032D  01B7               	clrf	_CurrentShiftBuffer+1
  1129                           
  1130                           ;main.c: 122: TRISCbits.TRISC0 = 0;
  1131  032E  1683               	bsf	3,5	;RP0=1, select bank1
  1132  032F  1007               	bcf	7,0	;volatile
  1133                           
  1134                           ;main.c: 123: PORTCbits.RC0 = 1;
  1135  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0331  1407               	bsf	7,0	;volatile
  1137                           
  1138                           ;main.c: 125: OPTION_REGbits.T0CS = 0;
  1139  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1140  0333  1281               	bcf	1,5	;volatile
  1141                           
  1142                           ;main.c: 126: OPTION_REGbits.PSA = 0;
  1143  0334  1181               	bcf	1,3	;volatile
  1144                           
  1145                           ;main.c: 128: OPTION_REGbits.PS0 = 1;
  1146  0335  1401               	bsf	1,0	;volatile
  1147                           
  1148                           ;main.c: 129: OPTION_REGbits.PS1 = 1;
  1149  0336  1481               	bsf	1,1	;volatile
  1150                           
  1151                           ;main.c: 130: OPTION_REGbits.PS2 = 1;
  1152  0337  1501               	bsf	1,2	;volatile
  1153                           
  1154                           ;main.c: 134: RCSTAbits.SPEN = 1;
  1155  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0339  1798               	bsf	24,7	;volatile
  1157                           
  1158                           ;main.c: 135: RCSTAbits.RX9 = 0;
  1159  033A  1318               	bcf	24,6	;volatile
  1160                           
  1161                           ;main.c: 140: TXSTAbits.CSRC = 1;
  1162  033B  1683               	bsf	3,5	;RP0=1, select bank1
  1163  033C  1798               	bsf	24,7	;volatile
  1164                           
  1165                           ;main.c: 141: TXSTAbits.TX9 = 0;
  1166  033D  1318               	bcf	24,6	;volatile
  1167                           
  1168                           ;main.c: 142: TXSTAbits.TXEN = 1;
  1169  033E  1698               	bsf	24,5	;volatile
  1170                           
  1171                           ;main.c: 143: TXSTAbits.SYNC = 0;
  1172  033F  1218               	bcf	24,4	;volatile
  1173                           
  1174                           ;main.c: 144: TXSTAbits.BRGH = 1;
  1175  0340  1518               	bsf	24,2	;volatile
  1176                           
  1177                           ;main.c: 145: TXSTAbits.TRMT = 1;
  1178  0341  1498               	bsf	24,1	;volatile
  1179                           
  1180                           ;main.c: 146: SPBRG = 31;
  1181  0342  301F               	movlw	31
  1182  0343  0099               	movwf	25	;volatile
  1183                           
  1184                           ;main.c: 150: INTCONbits.GIE = 1;
  1185  0344  178B               	bsf	11,7	;volatile
  1186                           
  1187                           ;main.c: 151: INTCONbits.PEIE = 1;
  1188  0345  170B               	bsf	11,6	;volatile
  1189                           
  1190                           ;main.c: 152: INTCONbits.TMR0IE = 1;
  1191  0346  168B               	bsf	11,5	;volatile
  1192                           
  1193                           ;main.c: 153: INTCONbits.TMR0IF = 0;
  1194  0347  110B               	bcf	11,2	;volatile
  1195                           
  1196                           ;main.c: 154: PIE1bits.TMR1IE = 0;
  1197  0348  100C               	bcf	12,0	;volatile
  1198                           
  1199                           ;main.c: 155: PIR1bits.TMR1IF = 0;
  1200  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1201  034A  100C               	bcf	12,0	;volatile
  1202                           
  1203                           ;main.c: 156: TMR0 = 0;
  1204  034B  0181               	clrf	1	;volatile
  1205                           
  1206                           ;main.c: 159: T1CONbits.TMR1ON = 0;
  1207  034C  1010               	bcf	16,0	;volatile
  1208                           
  1209                           ;main.c: 160: T1CONbits.T1CKPS0 = 0;
  1210  034D  1210               	bcf	16,4	;volatile
  1211                           
  1212                           ;main.c: 161: T1CONbits.T1CKPS1 = 1;
  1213  034E  1690               	bsf	16,5	;volatile
  1214                           
  1215                           ;main.c: 162: T1CONbits.T1OSCEN = 0;
  1216  034F  1190               	bcf	16,3	;volatile
  1217                           
  1218                           ;main.c: 163: T1CONbits.T1INSYNC = 0;
  1219  0350  1110               	bcf	16,2	;volatile
  1220                           
  1221                           ;main.c: 164: T1CONbits.TMR1CS = 0;
  1222  0351  1090               	bcf	16,1	;volatile
  1223                           
  1224                           ;main.c: 165: TMR1 = 0;
  1225  0352  018E               	clrf	14	;volatile
  1226  0353  018F               	clrf	15	;volatile
  1227                           
  1228                           ;main.c: 166: T1CONbits.TMR1ON = 1;
  1229  0354  1410               	bsf	16,0	;volatile
  1230                           
  1231                           ;main.c: 168: PIE1bits.TMR1IE = 0;
  1232  0355  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0356  100C               	bcf	12,0	;volatile
  1234                           
  1235                           ;main.c: 169: PIR1bits.TMR2IF = 0;
  1236  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0358  108C               	bcf	12,1	;volatile
  1238  0359  0008               	return
  1239  035A                     __end_of_SetupConfHandle:	
  1240                           
  1241                           	psect	text4
  1242  004D                     __ptext4:	
  1243 ;; *************** function _OparateSystem *****************
  1244 ;; Defined at:
  1245 ;;		line 179 in file "Source_Files/main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  Idx             2    1[BANK0 ] unsigned int 
  1250 ;;  DataPtr         1    0[BANK0 ] PTR unsigned int 
  1251 ;;		 -> TempArray(10), 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 300/0
  1258 ;;		On exit  : 300/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       3       0       0       0
  1263 ;;      Temps:          4       0       0       0       0
  1264 ;;      Totals:         4       3       0       0       0
  1265 ;;Total ram usage:        7 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    3
  1268 ;; This function calls:
  1269 ;;		_SerialPrint
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _OparateSystem
  1277  004D                     _OparateSystem:	
  1278                           
  1279                           ;main.c: 181: if( OneSecond >= 77 )
  1280                           
  1281                           ;incstack = 0
  1282                           ; Regs used in _OparateSystem: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1283  004D  304D               	movlw	77
  1284  004E  023E               	subwf	_OneSecond,w
  1285  004F  1C03               	skipc
  1286  0050  29AB               	goto	l114
  1287                           
  1288                           ;main.c: 182: {;main.c: 183: OneSecond = 0;
  1289  0051  01BE               	clrf	_OneSecond
  1290                           
  1291                           ;main.c: 184: SystemFlag.Dht22StartRead = 1;
  1292  0052  14BD               	bsf	_SystemFlag,1
  1293                           
  1294                           ;main.c: 189: if( CurrentShiftBuffer != PreviousShiftBuffer )
  1295  0053  0835               	movf	_PreviousShiftBuffer+1,w
  1296  0054  0637               	xorwf	_CurrentShiftBuffer+1,w
  1297  0055  1D03               	skipz
  1298  0056  2859               	goto	u485
  1299  0057  0834               	movf	_PreviousShiftBuffer,w
  1300  0058  0636               	xorwf	_CurrentShiftBuffer,w
  1301  0059                     u485:	
  1302  0059  1903               	skipnz
  1303  005A  29AB               	goto	l114
  1304                           
  1305                           ;main.c: 190: {;main.c: 191: PORTBbits.RB0 = 0;
  1306  005B  1006               	bcf	6,0	;volatile
  1307                           
  1308                           ;main.c: 192: PORTBbits.RB1 = 0;
  1309  005C  1086               	bcf	6,1	;volatile
  1310                           
  1311                           ;main.c: 193: PORTBbits.RB2 = 0;
  1312  005D  1106               	bcf	6,2	;volatile
  1313                           
  1314                           ;main.c: 195: for( shiftRegIndex = 0; shiftRegIndex < 16; shiftRegIndex++ )
  1315  005E  01BC               	clrf	_shiftRegIndex
  1316  005F                     l1069:	
  1317                           
  1318                           ;main.c: 196: {;main.c: 197: if( CurrentShiftBuffer & ( 0x8000 >> shiftRegIndex ))
  1319  005F  3000               	movlw	0
  1320  0060  00F5               	movwf	??_OparateSystem
  1321  0061  3080               	movlw	128
  1322  0062  00F6               	movwf	??_OparateSystem+1
  1323  0063  0A3C               	incf	_shiftRegIndex,w
  1324  0064  2868               	goto	u494
  1325  0065                     u495:	
  1326  0065  1003               	clrc
  1327  0066  0CF6               	rrf	??_OparateSystem+1,f
  1328  0067  0CF5               	rrf	??_OparateSystem,f
  1329  0068                     u494:	
  1330  0068  3EFF               	addlw	-1
  1331  0069  1D03               	skipz
  1332  006A  2865               	goto	u495
  1333  006B  0836               	movf	_CurrentShiftBuffer,w
  1334  006C  0575               	andwf	??_OparateSystem,w
  1335  006D  00F7               	movwf	??_OparateSystem+2
  1336  006E  0837               	movf	_CurrentShiftBuffer+1,w
  1337  006F  0576               	andwf	??_OparateSystem+1,w
  1338  0070  00F8               	movwf	??_OparateSystem+3
  1339  0071  0877               	movf	??_OparateSystem+2,w
  1340  0072  0478               	iorwf	??_OparateSystem+3,w
  1341  0073  1903               	btfsc	3,2
  1342  0074  2877               	goto	l112
  1343                           
  1344                           ;main.c: 198: PORTBbits.RB1 = 1;
  1345  0075  1486               	bsf	6,1	;volatile
  1346  0076  2878               	goto	l113
  1347  0077                     l112:	
  1348                           
  1349                           ;main.c: 199: else;main.c: 200: PORTBbits.RB1 = 0;
  1350  0077  1086               	bcf	6,1	;volatile
  1351  0078                     l113:	
  1352                           
  1353                           ;main.c: 202: PORTBbits.RB0 = 1;
  1354  0078  1406               	bsf	6,0	;volatile
  1355                           
  1356                           ;main.c: 203: PORTBbits.RB0 = 0;
  1357  0079  1006               	bcf	6,0	;volatile
  1358  007A  3001               	movlw	1
  1359  007B  00F5               	movwf	??_OparateSystem
  1360  007C  0875               	movf	??_OparateSystem,w
  1361  007D  07BC               	addwf	_shiftRegIndex,f
  1362  007E  3010               	movlw	16
  1363  007F  023C               	subwf	_shiftRegIndex,w
  1364  0080  1C03               	skipc
  1365  0081  285F               	goto	l1069
  1366                           
  1367                           ;main.c: 204: };main.c: 205: PORTBbits.RB2 = 1;
  1368  0082  1506               	bsf	6,2	;volatile
  1369                           
  1370                           ;main.c: 206: PORTBbits.RB2 = 0;
  1371  0083  1106               	bcf	6,2	;volatile
  1372                           
  1373                           ;main.c: 208: PreviousShiftBuffer = CurrentShiftBuffer;
  1374  0084  0837               	movf	_CurrentShiftBuffer+1,w
  1375  0085  00B5               	movwf	_PreviousShiftBuffer+1
  1376  0086  0836               	movf	_CurrentShiftBuffer,w
  1377  0087  00B4               	movwf	_PreviousShiftBuffer
  1378  0088  29AB               	goto	l114
  1379  0089                     l117:	
  1380                           ;main.c: 223: {;main.c: 224: case StartTransmitState:
  1381                           
  1382                           ;main.c: 222: switch( Dht22CurrentStatus )
  1383                           
  1384                           
  1385                           ;main.c: 225: TRISCbits.TRISC0 = 0;
  1386  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1387  008A  1007               	bcf	7,0	;volatile
  1388                           
  1389                           ;main.c: 226: PORTCbits.RC0 = 0;
  1390  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1391  008C  1007               	bcf	7,0	;volatile
  1392                           
  1393                           ;main.c: 227: TMR1H = 0 >> 8, TMR1L = 0;
  1394  008D  018F               	clrf	15	;volatile
  1395  008E  018E               	clrf	14	;volatile
  1396                           
  1397                           ;main.c: 228: CheckSum = 0;
  1398  008F  01B0               	clrf	_CheckSum
  1399  0090  01B1               	clrf	_CheckSum+1
  1400                           
  1401                           ;main.c: 229: ReceiveIndex = 0;
  1402  0091  01A4               	clrf	_ReceiveIndex
  1403  0092  01A5               	clrf	_ReceiveIndex+1
  1404                           
  1405                           ;main.c: 230: Idx = 0;
  1406  0093  01DF               	clrf	OparateSystem@Idx
  1407  0094  01E0               	clrf	OparateSystem@Idx+1
  1408                           
  1409                           ;main.c: 231: DataPtr = TempArray;
  1410  0095  303F               	movlw	(low (_TempArray| 0))& (0+255)
  1411  0096  00F5               	movwf	??_OparateSystem
  1412  0097  0875               	movf	??_OparateSystem,w
  1413  0098  00DE               	movwf	OparateSystem@DataPtr
  1414                           
  1415                           ;main.c: 232: Dht22CurrentStatus = WaitFirstTransmitState;
  1416  0099  3002               	movlw	2
  1417  009A  2941               	goto	L5
  1418  009B                     l1089:	
  1419                           ;main.c: 233: break;
  1420                           
  1421                           
  1422                           ;main.c: 236: if( TMR1 > ( 30000ul) )
  1423  009B  3075               	movlw	117
  1424  009C  020F               	subwf	15,w	;volatile
  1425  009D  3031               	movlw	49
  1426  009E  1903               	skipnz
  1427  009F  020E               	subwf	14,w	;volatile
  1428  00A0  1C03               	skipc
  1429  00A1  29AB               	goto	l114
  1430                           
  1431                           ;main.c: 237: {;main.c: 238: PORTCbits.RC0 = 1;
  1432  00A2  1407               	bsf	7,0	;volatile
  1433                           
  1434                           ;main.c: 239: TRISCbits.TRISC0 = 1;
  1435  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1436  00A4  1407               	bsf	7,0	;volatile
  1437                           
  1438                           ;main.c: 240: TMR1H = 0 >> 8, TMR1L = 0;
  1439  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1440  00A6  018F               	clrf	15	;volatile
  1441  00A7  018E               	clrf	14	;volatile
  1442                           
  1443                           ;main.c: 241: Dht22CurrentStatus = CheckresponseState;
  1444  00A8  3003               	movlw	3
  1445  00A9  2941               	goto	L5
  1446  00AA                     l1097:	
  1447                           
  1448                           ;main.c: 247: if(CurrentPinValue != PreviousPinValue )
  1449  00AA  083B               	movf	_PreviousPinValue+1,w
  1450  00AB  0639               	xorwf	_CurrentPinValue+1,w
  1451  00AC  1D03               	skipz
  1452  00AD  28B0               	goto	u535
  1453  00AE  083A               	movf	_PreviousPinValue,w
  1454  00AF  0638               	xorwf	_CurrentPinValue,w
  1455  00B0                     u535:	
  1456  00B0  1903               	skipnz
  1457  00B1  28C4               	goto	l1109
  1458                           
  1459                           ;main.c: 248: {;main.c: 249: if( CurrentPinValue )
  1460  00B2  0838               	movf	_CurrentPinValue,w
  1461  00B3  0439               	iorwf	_CurrentPinValue+1,w
  1462  00B4  1903               	btfsc	3,2
  1463  00B5  28B9               	goto	l1103
  1464  00B6                     l1101:	
  1465                           
  1466                           ;main.c: 250: TMR1H = 0 >> 8, TMR1L = 0;
  1467  00B6  018F               	clrf	15	;volatile
  1468  00B7  018E               	clrf	14	;volatile
  1469  00B8  29AB               	goto	l114
  1470  00B9                     l1103:	
  1471                           
  1472                           ;main.c: 251: else;main.c: 252: {;main.c: 253: if( TMR1 > ( 100 ) )
  1473  00B9  3000               	movlw	0
  1474  00BA  020F               	subwf	15,w	;volatile
  1475  00BB  3065               	movlw	101
  1476  00BC  1903               	skipnz
  1477  00BD  020E               	subwf	14,w	;volatile
  1478  00BE  1C03               	skipc
  1479  00BF  29AB               	goto	l114
  1480                           
  1481                           ;main.c: 254: {;main.c: 255: TMR1H = 0 >> 8, TMR1L = 0;
  1482  00C0  018F               	clrf	15	;volatile
  1483  00C1  018E               	clrf	14	;volatile
  1484                           
  1485                           ;main.c: 256: Dht22CurrentStatus = StartReadState;
  1486  00C2  3004               	movlw	4
  1487  00C3  2941               	goto	L5
  1488  00C4                     l1109:	
  1489                           
  1490                           ;main.c: 260: else;main.c: 261: {;main.c: 262: if( TMR1 > 500 )
  1491  00C4  3001               	movlw	1
  1492  00C5  020F               	subwf	15,w	;volatile
  1493  00C6  30F5               	movlw	245
  1494  00C7  1903               	skipnz
  1495  00C8  020E               	subwf	14,w	;volatile
  1496  00C9  1C03               	skipc
  1497  00CA  29AB               	goto	l114
  1498                           
  1499                           ;main.c: 263: {;main.c: 264: SerialPrint("Test Fail!\r ");
  1500  00CB  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1501  00CC                     L6:	
  1502  00CC  00F3               	movwf	SerialPrint@Text
  1503  00CD  3080               	movlw	128
  1504  00CE  00F4               	movwf	SerialPrint@Text+1
  1505  00CF  120A  118A  238C  120A  118A  	fcall	_SerialPrint
  1506  00D4                     l1113:	
  1507                           
  1508                           ;main.c: 265: Dht22CurrentStatus = StopReadState;
  1509  00D4  3006               	movlw	6
  1510  00D5  2941               	goto	L5
  1511  00D6                     l1115:	
  1512                           
  1513                           ;main.c: 271: if(CurrentPinValue != PreviousPinValue )
  1514  00D6  083B               	movf	_PreviousPinValue+1,w
  1515  00D7  0639               	xorwf	_CurrentPinValue+1,w
  1516  00D8  1D03               	skipz
  1517  00D9  28DC               	goto	u575
  1518  00DA  083A               	movf	_PreviousPinValue,w
  1519  00DB  0638               	xorwf	_CurrentPinValue,w
  1520  00DC                     u575:	
  1521  00DC  1903               	skipnz
  1522  00DD  2945               	goto	l1139
  1523                           
  1524                           ;main.c: 272: {;main.c: 273: if( CurrentPinValue )
  1525  00DE  0838               	movf	_CurrentPinValue,w
  1526  00DF  0439               	iorwf	_CurrentPinValue+1,w
  1527  00E0  1D03               	btfss	3,2
  1528  00E1  28B6               	goto	l1101
  1529                           
  1530                           ;main.c: 275: else;main.c: 276: {;main.c: 277: if( TMR1 > 20 && TMR1 < 50 )
  1531  00E2  3000               	movlw	0
  1532  00E3  020F               	subwf	15,w	;volatile
  1533  00E4  3015               	movlw	21
  1534  00E5  1903               	skipnz
  1535  00E6  020E               	subwf	14,w	;volatile
  1536  00E7  1C03               	skipc
  1537  00E8  2909               	goto	l1127
  1538  00E9  3000               	movlw	0
  1539  00EA  020F               	subwf	15,w	;volatile
  1540  00EB  3032               	movlw	50
  1541  00EC  1903               	skipnz
  1542  00ED  020E               	subwf	14,w	;volatile
  1543  00EE  1803               	skipnc
  1544  00EF  2909               	goto	l1127
  1545                           
  1546                           ;main.c: 278: *DataPtr &= ~( 0x80 >> Idx );
  1547  00F0  0A5F               	incf	OparateSystem@Idx,w
  1548  00F1  00F5               	movwf	??_OparateSystem
  1549  00F2  3080               	movlw	128
  1550  00F3  00F6               	movwf	??_OparateSystem+1
  1551  00F4  3000               	movlw	0
  1552  00F5  00F7               	movwf	??_OparateSystem+2
  1553  00F6  28FA               	goto	u614
  1554  00F7                     u615:	
  1555  00F7  0D77               	rlf	??_OparateSystem+2,w
  1556  00F8  0CF7               	rrf	??_OparateSystem+2,f
  1557  00F9  0CF6               	rrf	??_OparateSystem+1,f
  1558  00FA                     u614:	
  1559  00FA  0BF5               	decfsz	??_OparateSystem,f
  1560  00FB  28F7               	goto	u615
  1561  00FC  09F6               	comf	??_OparateSystem+1,f
  1562  00FD  09F7               	comf	??_OparateSystem+2,f
  1563  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1564  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0100  085E               	movf	OparateSystem@DataPtr,w
  1566  0101  0084               	movwf	4
  1567  0102  0876               	movf	??_OparateSystem+1,w
  1568  0103  1383               	bcf	3,7	;select IRP bank0
  1569  0104  0580               	andwf	0,f
  1570  0105  0A84               	incf	4,f
  1571  0106  0877               	movf	??_OparateSystem+2,w
  1572  0107  0580               	andwf	0,f
  1573  0108  291F               	goto	l1129
  1574  0109                     l1127:	
  1575                           
  1576                           ;main.c: 279: else;main.c: 280: *DataPtr |= ( 0x80 >> Idx );
  1577  0109  0A5F               	incf	OparateSystem@Idx,w
  1578  010A  00F5               	movwf	??_OparateSystem
  1579  010B  3080               	movlw	128
  1580  010C  00F6               	movwf	??_OparateSystem+1
  1581  010D  3000               	movlw	0
  1582  010E  00F7               	movwf	??_OparateSystem+2
  1583  010F  2913               	goto	u624
  1584  0110                     u625:	
  1585  0110  0D77               	rlf	??_OparateSystem+2,w
  1586  0111  0CF7               	rrf	??_OparateSystem+2,f
  1587  0112  0CF6               	rrf	??_OparateSystem+1,f
  1588  0113                     u624:	
  1589  0113  0BF5               	decfsz	??_OparateSystem,f
  1590  0114  2910               	goto	u625
  1591  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0117  085E               	movf	OparateSystem@DataPtr,w
  1594  0118  0084               	movwf	4
  1595  0119  0876               	movf	??_OparateSystem+1,w
  1596  011A  1383               	bcf	3,7	;select IRP bank0
  1597  011B  0480               	iorwf	0,f
  1598  011C  0A84               	incf	4,f
  1599  011D  0877               	movf	??_OparateSystem+2,w
  1600  011E  0480               	iorwf	0,f
  1601  011F                     l1129:	
  1602                           
  1603                           ;main.c: 282: if( ++Idx > 7 )
  1604  011F  3001               	movlw	1
  1605  0120  07DF               	addwf	OparateSystem@Idx,f
  1606  0121  1803               	skipnc
  1607  0122  0AE0               	incf	OparateSystem@Idx+1,f
  1608  0123  3000               	movlw	0
  1609  0124  07E0               	addwf	OparateSystem@Idx+1,f
  1610  0125  3000               	movlw	0
  1611  0126  0260               	subwf	OparateSystem@Idx+1,w
  1612  0127  3008               	movlw	8
  1613  0128  1903               	skipnz
  1614  0129  025F               	subwf	OparateSystem@Idx,w
  1615  012A  1C03               	skipc
  1616  012B  29AB               	goto	l114
  1617                           
  1618                           ;main.c: 283: {;main.c: 284: Idx = 0;
  1619  012C  01DF               	clrf	OparateSystem@Idx
  1620  012D  01E0               	clrf	OparateSystem@Idx+1
  1621                           
  1622                           ;main.c: 285: if( ++ReceiveIndex < 5 )
  1623  012E  3001               	movlw	1
  1624  012F  07A4               	addwf	_ReceiveIndex,f
  1625  0130  1803               	skipnc
  1626  0131  0AA5               	incf	_ReceiveIndex+1,f
  1627  0132  3000               	movlw	0
  1628  0133  07A5               	addwf	_ReceiveIndex+1,f
  1629  0134  3000               	movlw	0
  1630  0135  0225               	subwf	_ReceiveIndex+1,w
  1631  0136  3005               	movlw	5
  1632  0137  1903               	skipnz
  1633  0138  0224               	subwf	_ReceiveIndex,w
  1634  0139  1803               	skipnc
  1635  013A  2940               	goto	l1137
  1636                           
  1637                           ;main.c: 286: *DataPtr++;
  1638  013B  3002               	movlw	2
  1639  013C  00F5               	movwf	??_OparateSystem
  1640  013D  0875               	movf	??_OparateSystem,w
  1641  013E  07DE               	addwf	OparateSystem@DataPtr,f
  1642  013F  29AB               	goto	l114
  1643  0140                     l1137:	
  1644                           
  1645                           ;main.c: 287: else;main.c: 288: Dht22CurrentStatus = ParseCollectingDateState;
  1646  0140  3005               	movlw	5
  1647  0141                     L5:	
  1648  0141  00F5               	movwf	??_OparateSystem
  1649  0142  0875               	movf	??_OparateSystem,w
  1650  0143  00C9               	movwf	_Dht22CurrentStatus
  1651  0144  29AB               	goto	l114
  1652  0145                     l1139:	
  1653                           
  1654                           ;main.c: 292: else if( TMR1 > 500 && CurrentPinValue )
  1655  0145  3001               	movlw	1
  1656  0146  020F               	subwf	15,w	;volatile
  1657  0147  30F5               	movlw	245
  1658  0148  1903               	skipnz
  1659  0149  020E               	subwf	14,w	;volatile
  1660  014A  1C03               	skipc
  1661  014B  29AB               	goto	l114
  1662  014C  0838               	movf	_CurrentPinValue,w
  1663  014D  0439               	iorwf	_CurrentPinValue+1,w
  1664  014E  1903               	btfsc	3,2
  1665  014F  29AB               	goto	l114
  1666                           
  1667                           ;main.c: 293: {;main.c: 294: SerialPrint("Time out!\r ");
  1668  0150  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1669  0151  28CC               	goto	L6
  1670  0152                     l1147:	
  1671                           
  1672                           ;main.c: 300: CheckSum = 0;
  1673  0152  01B0               	clrf	_CheckSum
  1674  0153  01B1               	clrf	_CheckSum+1
  1675                           
  1676                           ;main.c: 301: CheckSum = ( TempArray[0] + TempArray[1] + TempArray[2] + TempArray[3] );
  1677  0154  0843               	movf	_TempArray+4,w
  1678  0155  0741               	addwf	_TempArray+2,w
  1679  0156  00F5               	movwf	??_OparateSystem
  1680  0157  0844               	movf	_TempArray+5,w
  1681  0158  1803               	skipnc
  1682  0159  0A44               	incf	_TempArray+5,w
  1683  015A  0742               	addwf	_TempArray+3,w
  1684  015B  00F6               	movwf	??_OparateSystem+1
  1685  015C  0845               	movf	_TempArray+6,w
  1686  015D  0775               	addwf	??_OparateSystem,w
  1687  015E  00F7               	movwf	??_OparateSystem+2
  1688  015F  0846               	movf	_TempArray+7,w
  1689  0160  1803               	skipnc
  1690  0161  0A46               	incf	_TempArray+7,w
  1691  0162  0776               	addwf	??_OparateSystem+1,w
  1692  0163  00F8               	movwf	??_OparateSystem+3
  1693  0164  083F               	movf	_TempArray,w
  1694  0165  0777               	addwf	??_OparateSystem+2,w
  1695  0166  00B0               	movwf	_CheckSum
  1696  0167  0840               	movf	_TempArray+1,w
  1697  0168  1803               	skipnc
  1698  0169  0A40               	incf	_TempArray+1,w
  1699  016A  0778               	addwf	??_OparateSystem+3,w
  1700  016B  00B1               	movwf	_CheckSum+1
  1701                           
  1702                           ;main.c: 302: CheckSum = (CheckSum & 0xFF);
  1703  016C  30FF               	movlw	255
  1704  016D  0530               	andwf	_CheckSum,w
  1705  016E  00B0               	movwf	_CheckSum
  1706  016F  3000               	movlw	0
  1707  0170  0531               	andwf	_CheckSum+1,w
  1708  0171  00B1               	movwf	_CheckSum+1
  1709                           
  1710                           ;main.c: 306: if( CheckSum == TempArray[ 4 ] )
  1711  0172  0831               	movf	_CheckSum+1,w
  1712  0173  0648               	xorwf	_TempArray+9,w
  1713  0174  1D03               	skipz
  1714  0175  2978               	goto	u675
  1715  0176  0830               	movf	_CheckSum,w
  1716  0177  0647               	xorwf	_TempArray+8,w
  1717  0178                     u675:	
  1718  0178  1D03               	skipz
  1719  0179  299A               	goto	l1159
  1720                           
  1721                           ;main.c: 307: {;main.c: 308: RhDecimalValue = TempArray[ 0 ];
  1722  017A  0840               	movf	_TempArray+1,w
  1723  017B  00AF               	movwf	_RhDecimalValue+1
  1724  017C  083F               	movf	_TempArray,w
  1725  017D  00AE               	movwf	_RhDecimalValue
  1726                           
  1727                           ;main.c: 309: RhDecimalValue <<= 8;
  1728  017E  3008               	movlw	8
  1729  017F                     u685:	
  1730  017F  1003               	clrc
  1731  0180  0DAE               	rlf	_RhDecimalValue,f
  1732  0181  0DAF               	rlf	_RhDecimalValue+1,f
  1733  0182  3EFF               	addlw	-1
  1734  0183  1D03               	skipz
  1735  0184  297F               	goto	u685
  1736                           
  1737                           ;main.c: 310: RhDecimalValue |= TempArray[ 1 ];
  1738  0185  0841               	movf	_TempArray+2,w
  1739  0186  04AE               	iorwf	_RhDecimalValue,f
  1740  0187  0842               	movf	_TempArray+3,w
  1741  0188  04AF               	iorwf	_RhDecimalValue+1,f
  1742                           
  1743                           ;main.c: 312: TunsignedDecimalValue = TempArray[ 2 ];
  1744  0189  0844               	movf	_TempArray+5,w
  1745  018A  00A9               	movwf	_TunsignedDecimalValue+1
  1746  018B  0843               	movf	_TempArray+4,w
  1747  018C  00A8               	movwf	_TunsignedDecimalValue
  1748                           
  1749                           ;main.c: 313: TunsignedDecimalValue <<= 8;
  1750  018D  3008               	movlw	8
  1751  018E                     u695:	
  1752  018E  1003               	clrc
  1753  018F  0DA8               	rlf	_TunsignedDecimalValue,f
  1754  0190  0DA9               	rlf	_TunsignedDecimalValue+1,f
  1755  0191  3EFF               	addlw	-1
  1756  0192  1D03               	skipz
  1757  0193  298E               	goto	u695
  1758                           
  1759                           ;main.c: 314: TunsignedDecimalValue |= TempArray[ 3 ];
  1760  0194  0845               	movf	_TempArray+6,w
  1761  0195  04A8               	iorwf	_TunsignedDecimalValue,f
  1762  0196  0846               	movf	_TempArray+7,w
  1763  0197  04A9               	iorwf	_TunsignedDecimalValue+1,f
  1764                           
  1765                           ;main.c: 316: SystemFlag.SendTxEnable = 1;
  1766  0198  143D               	bsf	_SystemFlag,0
  1767  0199  29A3               	goto	l1161
  1768  019A                     l1159:	
  1769                           ;main.c: 318: }
  1770                           
  1771                           ;main.c: 317: Dht22CurrentStatus = StopReadState;
  1772                           
  1773                           
  1774                           ;main.c: 319: else;main.c: 320: {;main.c: 321: SerialPrint(" CheckSum Error! \r");
  1775  019A  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1776  019B  00F3               	movwf	SerialPrint@Text
  1777  019C  3080               	movlw	128
  1778  019D  00F4               	movwf	SerialPrint@Text+1
  1779  019E  120A  118A  238C  120A  118A  	fcall	_SerialPrint
  1780  01A3                     l1161:	
  1781                           
  1782                           ;main.c: 322: Dht22CurrentStatus = StopReadState;
  1783  01A3  3006               	movlw	6
  1784  01A4  00F5               	movwf	??_OparateSystem
  1785  01A5  0875               	movf	??_OparateSystem,w
  1786  01A6  00C9               	movwf	_Dht22CurrentStatus
  1787  01A7  28D4               	goto	l1113
  1788  01A8                     l142:	
  1789                           ;main.c: 328: case StopReadState:
  1790                           
  1791                           
  1792                           ;main.c: 329: SystemFlag.Dht22StartRead = 0;
  1793  01A8  10BD               	bcf	_SystemFlag,1
  1794                           
  1795                           ;main.c: 330: Dht22CurrentStatus = StartTransmitState;
  1796  01A9  01C9               	clrf	_Dht22CurrentStatus
  1797  01AA  0AC9               	incf	_Dht22CurrentStatus,f
  1798  01AB                     l114:	
  1799                           ;main.c: 331: break;
  1800                           
  1801  01AB  1CBD               	btfss	_SystemFlag,1
  1802  01AC  0008               	return
  1803                           
  1804                           ;main.c: 215: {;main.c: 216: uint8_t Idx ;;main.c: 217: uint8_t *DataPtr;;main.c: 219: P
      +                          reviousPinValue = CurrentPinValue;
  1805  01AD  0839               	movf	_CurrentPinValue+1,w
  1806  01AE  00BB               	movwf	_PreviousPinValue+1
  1807  01AF  0838               	movf	_CurrentPinValue,w
  1808  01B0  00BA               	movwf	_PreviousPinValue
  1809                           
  1810                           ;main.c: 220: CurrentPinValue = PORTCbits.RC0;
  1811  01B1  0807               	movf	7,w	;volatile
  1812  01B2  3901               	andlw	1
  1813  01B3  00F5               	movwf	??_OparateSystem
  1814  01B4  01F6               	clrf	??_OparateSystem+1
  1815  01B5  0875               	movf	??_OparateSystem,w
  1816  01B6  00B8               	movwf	_CurrentPinValue
  1817  01B7  0876               	movf	??_OparateSystem+1,w
  1818  01B8  00B9               	movwf	_CurrentPinValue+1
  1819  01B9  0849               	movf	_Dht22CurrentStatus,w
  1820                           
  1821                           ; Switch size 1, requested type "simple"
  1822                           ; Number of cases is 6, Range of values is 1 to 6
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte           19    10 (average)
  1826                           ; direct_byte           29    11 (fixed)
  1827                           ; jumptable            263     9 (fixed)
  1828                           ;	Chosen strategy is simple_byte
  1829  01BA  3A01               	xorlw	1	; case 1
  1830  01BB  1903               	skipnz
  1831  01BC  2889               	goto	l117
  1832  01BD  3A03               	xorlw	3	; case 2
  1833  01BE  1903               	skipnz
  1834  01BF  289B               	goto	l1089
  1835  01C0  3A01               	xorlw	1	; case 3
  1836  01C1  1903               	skipnz
  1837  01C2  28AA               	goto	l1097
  1838  01C3  3A07               	xorlw	7	; case 4
  1839  01C4  1903               	skipnz
  1840  01C5  28D6               	goto	l1115
  1841  01C6  3A01               	xorlw	1	; case 5
  1842  01C7  1903               	skipnz
  1843  01C8  2952               	goto	l1147
  1844  01C9  3A03               	xorlw	3	; case 6
  1845  01CA  1903               	skipnz
  1846  01CB  29A8               	goto	l142
  1847  01CC  29AB               	goto	l114
  1848  01CD  29AB               	goto	l114
  1849  01CE                     __end_of_OparateSystem:	
  1850                           
  1851                           	psect	text5
  1852  038C                     __ptext5:	
  1853 ;; *************** function _SerialPrint *****************
  1854 ;; Defined at:
  1855 ;;		line 337 in file "Source_Files/main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  Text            2    3[COMMON] PTR unsigned char 
  1858 ;;		 -> STR_3(19), STR_2(12), STR_1(13), Tmessage(25), 
  1859 ;;		 -> Rhmessage(20), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  1866 ;; Tracked objects:
  1867 ;;		On entry : 200/0
  1868 ;;		On exit  : 300/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         2       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0
  1874 ;;      Totals:         2       0       0       0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used:    2
  1877 ;; Hardware stack levels required when called:    1
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;;		_OparateSystem
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _SerialPrint
  1888  038C                     _SerialPrint:	
  1889  038C                     l979:	
  1890                           ;main.c: 339: while( *Text != '\0')
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _SerialPrint: [wreg-fsr0h+btemp+1+pclath]
  1894                           
  1895  038C  0874               	movf	SerialPrint@Text+1,w
  1896  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1897  038E  00FF               	movwf	127
  1898  038F  0873               	movf	SerialPrint@Text,w
  1899  0390  0084               	movwf	4
  1900  0391  120A  118A  22A9  120A  118A  	fcall	stringtab
  1901  0396  3A00               	xorlw	0
  1902  0397  1903               	btfsc	3,2
  1903  0398  0008               	return
  1904                           
  1905                           ;main.c: 340: {;main.c: 341: if( TXSTAbits.TRMT )
  1906  0399  1683               	bsf	3,5	;RP0=1, select bank1
  1907  039A  1C98               	btfss	24,1	;volatile
  1908  039B  2B8C               	goto	l979
  1909                           
  1910                           ;main.c: 342: {;main.c: 343: TXREG = *Text++;
  1911  039C  0874               	movf	SerialPrint@Text+1,w
  1912  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1913  039E  00FF               	movwf	127
  1914  039F  0873               	movf	SerialPrint@Text,w
  1915  03A0  0084               	movwf	4
  1916  03A1  120A  118A  22A9  120A  118A  	fcall	stringtab
  1917  03A6  0099               	movwf	25	;volatile
  1918  03A7  3001               	movlw	1
  1919  03A8  07F3               	addwf	SerialPrint@Text,f
  1920  03A9  1803               	skipnc
  1921  03AA  0AF4               	incf	SerialPrint@Text+1,f
  1922  03AB  3000               	movlw	0
  1923  03AC  07F4               	addwf	SerialPrint@Text+1,f
  1924  03AD  2B8C               	goto	l979
  1925  03AE                     __end_of_SerialPrint:	
  1926                           
  1927                           	psect	text6
  1928  040A                     __ptext6:	
  1929 ;; *************** function _InitialVariableHande *****************
  1930 ;; Defined at:
  1931 ;;		line 173 in file "Source_Files/main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : B00/0
  1942 ;;		On exit  : B00/0
  1943 ;;		Unchanged: 800/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _InitialVariableHande
  1961  040A                     _InitialVariableHande:	
  1962                           
  1963                           ;main.c: 175: SystemFlag.Dht22StartRead = 1;
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _InitialVariableHande: []
  1967  040A  14BD               	bsf	_SystemFlag,1
  1968                           
  1969                           ;main.c: 176: SystemFlag.SendTxEnable = 0;
  1970  040B  103D               	bcf	_SystemFlag,0
  1971  040C  0008               	return
  1972  040D                     __end_of_InitialVariableHande:	
  1973                           
  1974                           	psect	text7
  1975  03DC                     __ptext7:	
  1976 ;; *************** function _T0int *****************
  1977 ;; Defined at:
  1978 ;;		line 349 in file "Source_Files/main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          3       0       0       0       0
  1995 ;;      Totals:         3       0       0       0       0
  1996 ;;Total ram usage:        3 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		Interrupt level 1
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _T0int
  2007  03DC                     _T0int:	
  2008                           
  2009                           ;main.c: 351: static unsigned char Cnt = 0;;main.c: 353: if( INTCONbits.TMR0IE && INTCON
      +                          bits.TMR0IF )
  2010  03DC  1A8B               	btfsc	11,5	;volatile
  2011  03DD  1D0B               	btfss	11,2	;volatile
  2012  03DE  2BEA               	goto	i1l160
  2013                           
  2014                           ;main.c: 354: {;main.c: 355: if( OneSecond < 77 )
  2015  03DF  304D               	movlw	77
  2016  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2017  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2018  03E2  023E               	subwf	_OneSecond,w
  2019  03E3  1803               	skipnc
  2020  03E4  2BE9               	goto	i1l1253
  2021                           
  2022                           ;main.c: 356: OneSecond++;
  2023  03E5  3001               	movlw	1
  2024  03E6  00F0               	movwf	??_T0int
  2025  03E7  0870               	movf	??_T0int,w
  2026  03E8  07BE               	addwf	_OneSecond,f
  2027  03E9                     i1l1253:	
  2028                           
  2029                           ;main.c: 358: INTCONbits.TMR0IF = 0;
  2030  03E9  110B               	bcf	11,2	;volatile
  2031  03EA                     i1l160:	
  2032  03EA  0872               	movf	??_T0int+2,w
  2033  03EB  008A               	movwf	10
  2034  03EC  0E71               	swapf	(??_T0int+1)^(0+4294967168),w
  2035  03ED  0083               	movwf	3
  2036  03EE  0EFE               	swapf	126,f
  2037  03EF  0E7E               	swapf	126,w
  2038  03F0  0009               	retfie
  2039  03F1                     __end_of_T0int:	
  2040  007E                     btemp	set	126	;btemp
  2041  007E                     wtemp0	set	126
  2042                           
  2043                           	psect	intentry
  2044  0004                     __pintentry:	
  2045                           ;incstack = 0
  2046                           ; Regs used in _T0int: [wreg+status,2+status,0]
  2047                           
  2048  0004                     interrupt_function:	
  2049  007E                     saved_w	set	btemp
  2050  0004  00FE               	movwf	btemp
  2051  0005  0E03               	swapf	3,w
  2052  0006  00F1               	movwf	??_T0int+1
  2053  0007  080A               	movf	10,w
  2054  0008  00F2               	movwf	??_T0int+2
  2055  0009  120A  118A  2BDC   	ljmp	_T0int


Data Sizes:
    Strings     44
    Constant    0
    Data        47
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      9      71
    BANK1            80      0      65
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    SerialPrint@Text	PTR unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[19]), STR_2(CODE[12]), STR_1(CODE[13]), Tmessage(BANK1[25]), 
		 -> Rhmessage(BANK0[20]), 

    OparateSystem@DataPtr	PTR unsigned int  size(1) Largest target is 10
		 -> TempArray(BANK0[10]), 

    s	PTR unsigned char  size(1) Largest target is 40
		 -> PrintBuffer(BANK1[40]), 


Critical Paths under _main in COMMON

    _main->_OparateSystem
    _main->___lwmod
    ___lwmod->___lwdiv
    _OparateSystem->_SerialPrint

Critical Paths under _T0int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _T0int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _T0int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _T0int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _T0int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2507
                                              8 BANK0      1     1      0
               _InitialVariableHande
                      _OparateSystem
                        _SerialPrint
                    _SetupConfHandle
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1012
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     761
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SetupConfHandle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OparateSystem                                        7     7      0     424
                                              5 COMMON     4     4      0
                                              0 BANK0      3     3      0
                        _SerialPrint
 ---------------------------------------------------------------------------------
 (2) _SerialPrint                                          2     0      2     310
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitialVariableHande                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _T0int                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitialVariableHande
   _OparateSystem
     _SerialPrint
   _SerialPrint
   _SetupConfHandle
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _T0int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      41       7       81.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BB      12        0.0%
ABS                  0      0      BB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 21:44:35 2020

                            _s 007A                              pc 0002                    __CFG_CP$OFF 0000  
        __end_of_OparateSystem 01CE                             fsr 0004                    __CFG_LVP$ON 0000  
                          l112 0077                            l113 0078                            l114 01AB  
                          l117 0089                            l142 01A8                            l979 038C  
                 __CFG_CPD$OFF 0000                            u614 00FA                            u615 00F7  
                          u535 00B0                            u624 0113                            u625 0110  
                          u485 0059                            u494 0068                            u575 00DC  
                          u495 0065                            u905 02F0                            u675 0178  
                          u685 017F                            u925 02FC                            u695 018E  
                          u935 0308                            u945 0312                            u975 0363  
                          u995 0374                            fsr0 0004                            indf 0000  
                 __CFG_FOSC$HS 0000                           l1101 00B6                           l1103 00B9  
                         l1113 00D4                           l1115 00D6                           l1109 00C4  
                         l1127 0109                           l1161 01A3                           l1137 0140  
                         l1129 011F                           l1147 0152                           l1139 0145  
                         l1307 01D8                           l1069 005F                           l1159 019A  
                         l1319 0243                           l1097 00AA                           l1089 009B  
                         l1273 0311                           l1265 02ED                           l1267 02FB  
                         l1291 036E                           l1277 031C                           l1295 037C  
                         l1289 0360                           l1299 0387                           STR_1 02CC  
                         STR_2 02D9                           STR_3 02B9                           u1005 037D  
                         _TMR0 0001                           _TMR1 000E                   __CFG_WRT$OFF 0000  
             ?_SetupConfHandle 0070                           _main 01CE                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 000C                          ?_main 0070  
                __CFG_WDTE$OFF 0000                __end_of___lwdiv 0321                          i1l160 03EA  
              __end_of___lwmod 038C                          _TMR1H 000F                          _TMR1L 000E  
                        _SPBRG 0099                          _T0int 03DC                          _TXREG 0019  
             _PreviousPinValue 003A                          _Index 0026             _Dht22CurrentStatus 0049  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __initialization 000F                   __end_of_main 02A9                         ??_main 0066  
                       ?_T0int 0070                         i1l1253 03E9                  ??_SerialPrint 0075  
               __CFG_PWRTE$OFF 0000                      ??___lwdiv 0077                      ??___lwmod 0078  
                 __pdataCOMMON 007A                         saved_w 007E        __end_of__initialization 0049  
                __end_of_T0int 03F1                 __pcstackCOMMON 0070                   __pidataBANK0 03C7  
                 __pidataBANK1 03AE            __end_of_SerialPrint 03AE                   _TFractionVal 002A  
                      ??_T0int 0070                 _OPTION_REGbits 0081                     _SystemFlag 003D  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     __pbssBANK3 0190  
__size_of_InitialVariableHande 0003                     __pmaintext 01CE                     __pintentry 0004  
                   __stringtab 02A9         __size_of_OparateSystem 0181                        _Counter 0020  
                  _SerialPrint 038C                        _Timeout 0032       __size_of_SetupConfHandle 0039  
                      ___lwdiv 02E5                        ___lwmod 035A                        __ptext1 035A  
                      __ptext2 02E5                        __ptext3 0321                        __ptext4 004D  
                      __ptext5 038C                        __ptext6 040A                        __ptext7 03DC  
                    _T1CONbits 0010                    _PrintBuffer 00A0                        clrloop0 0403  
         end_of_initialization 0049             _CurrentShiftBuffer 0036                      _RCSTAbits 0018  
                _OparateSystem 004D                      _PORTBbits 0006                      _PORTCbits 0007  
                    _TRISBbits 0086                      _TRISCbits 0087                      _TXSTAbits 0098  
               ?_OparateSystem 0070                  __pidataCOMMON 040D                _CurrentPinValue 0038  
            ??_SetupConfHandle 0073            start_initialization 000F                SerialPrint@Text 0073  
                    _OneSecond 003E                      _TempArray 003F                      _Rhmessage 004A  
                    _TestArray 0190                     init_fetch0 03F1                 _RhDecimalValue 002E  
                  __pdataBANK0 0049                    __pdataBANK1 00C8   __end_of_InitialVariableHande 040D  
         OparateSystem@DataPtr 005E                    __pbssCOMMON 0079                      ___latbits 0002  
                 _ReceiveIndex 0024                  __pcstackBANK0 005E                   ?_SerialPrint 0073  
             ___lwdiv@dividend 0075                ??_OparateSystem 0075                       ?___lwdiv 0073  
                     ?___lwmod 0061                       T0int@Cnt 0079                      __pstrings 02A9  
                _shiftRegIndex 003C                 __size_of_T0int 0015               ___lwdiv@quotient 005F  
            interrupt_function 0004                      clear_ram0 0402                       _PIE1bits 008C  
                     _PIR1bits 000C                    __stringbase 02B8                       _CheckSum 0030  
         _InitialVariableHande 040A                _SetupConfHandle 0321                       _Tmessage 00C8  
             __size_of___lwdiv 003C               __size_of___lwmod 0032             __end_of__stringtab 02B9  
          _PreviousShiftBuffer 0034                ___lwdiv@divisor 0073                ___lwdiv@counter 005E  
             OparateSystem@Idx 005F          ?_InitialVariableHande 0070                  __size_of_main 00DB  
         __size_of_SerialPrint 0022          _TunsignedDecimalValue 0028                     _INTCONbits 000B  
                     init_ram0 03F5                       intlevel1 0000        __end_of_SetupConfHandle 035A  
             ___lwmod@dividend 0063                      stringcode 02B3                  _RhFractionVal 002C  
              ___lwmod@divisor 0061                ___lwmod@counter 0065                       stringdir 02B3  
                     stringtab 02A9         ??_InitialVariableHande 0073  
